<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170524 23:15:32.836" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae" id="s1" name="Project Ci Ivanaz Carinae">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend/test_suite.robot" id="s1-s1-s1" name="Test Suite">
<test id="s1-s1-s1-t1" name="Test1 - Create Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:33.068" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:33.068" starttime="20170524 23:15:33.068"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 23:15:33.070" level="INFO">${name} = irkpzadvji</msg>
<status status="PASS" endtime="20170524 23:15:33.070" starttime="20170524 23:15:33.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.072" level="INFO">${name_suite} = irkpzadvji</msg>
<status status="PASS" endtime="20170524 23:15:33.073" starttime="20170524 23:15:33.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 23:15:33.074" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 23:15:33.074" starttime="20170524 23:15:33.073"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.075" level="INFO">${email} = irkpzadvji@email.com</msg>
<status status="PASS" endtime="20170524 23:15:33.075" starttime="20170524 23:15:33.074"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.076" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 23:15:33.076" starttime="20170524 23:15:33.075"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.077" level="INFO">${socialSecurityNumber} = 730130915</msg>
<status status="PASS" endtime="20170524 23:15:33.077" starttime="20170524 23:15:33.077"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:33.079" level="INFO">${dictionary} = {u'id': u'100', u'name': u'irkpzadvji', u'createDate': u'1451602800000', u'email': u'irkpzadvji@email.com', u'gender': u'M', u'socialSecurityNumber': u'730130915'}</msg>
<status status="PASS" endtime="20170524 23:15:33.080" starttime="20170524 23:15:33.078"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:33.081" level="INFO">${client_json} = {"id": "100", "name": "irkpzadvji", "createDate": "1451602800000", "email": "irkpzadvji@email.com", "gender": "M", "socialSecurityNumber": "730130915"}</msg>
<status status="PASS" endtime="20170524 23:15:33.081" starttime="20170524 23:15:33.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.082" starttime="20170524 23:15:33.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.083" starttime="20170524 23:15:33.083"></status>
</kw>
<msg timestamp="20170524 23:15:33.084" level="INFO">${request_body} = {"id": "100", "name": "irkpzadvji", "createDate": "1451602800000", "email": "irkpzadvji@email.com", "gender": "M", "socialSecurityNumber": "730130915"}</msg>
<status status="PASS" endtime="20170524 23:15:33.084" starttime="20170524 23:15:33.067"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.085" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.085" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.085" starttime="20170524 23:15:33.084"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.087" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:33.087" starttime="20170524 23:15:33.086"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.088" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:33.088" starttime="20170524 23:15:33.087"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.089" level="INFO">Request body set to "{"id": "100", "name": "irkpzadvji", "createDate": "1451602800000", "email": "irkpzadvji@email.com", "gender": "M", "socialSecurityNumber": "730130915"}".</msg>
<status status="PASS" endtime="20170524 23:15:33.089" starttime="20170524 23:15:33.088"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.107" starttime="20170524 23:15:33.090"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.109" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.109" starttime="20170524 23:15:33.108"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.110" starttime="20170524 23:15:33.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.111" starttime="20170524 23:15:33.111"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.115" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.116" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.117" starttime="20170524 23:15:33.114"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.132" starttime="20170524 23:15:33.118"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.134" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.134" starttime="20170524 23:15:33.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.135" starttime="20170524 23:15:33.135"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.138" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.138" starttime="20170524 23:15:33.136"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.146" starttime="20170524 23:15:33.139"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.147" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.148" starttime="20170524 23:15:33.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.153" starttime="20170524 23:15:33.153"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.155" level="INFO">${body_second_request} = 49</msg>
<status status="PASS" endtime="20170524 23:15:33.158" starttime="20170524 23:15:33.154"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.160" level="INFO">${last_index} = 48</msg>
<status status="PASS" endtime="20170524 23:15:33.160" starttime="20170524 23:15:33.159"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.162" level="INFO">${json_id} = 64</msg>
<status status="PASS" endtime="20170524 23:15:33.162" starttime="20170524 23:15:33.161"></status>
</kw>
<msg timestamp="20170524 23:15:33.163" level="INFO">${clientId} = 64</msg>
<status status="PASS" endtime="20170524 23:15:33.163" starttime="20170524 23:15:33.113"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.164" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/64</msg>
<status status="PASS" endtime="20170524 23:15:33.165" starttime="20170524 23:15:33.164"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.166" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.166" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.166" starttime="20170524 23:15:33.165"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.174" starttime="20170524 23:15:33.167"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.176" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.176" starttime="20170524 23:15:33.175"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.178" level="INFO">${client_body} = {"id":64,"name":"irkpzadvji","createDate":1451602800000,"email":"irkpzadvji@email.com","gender":"M","socialSecurityNumber":"730130915"}</msg>
<status status="PASS" endtime="20170524 23:15:33.178" starttime="20170524 23:15:33.177"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.180" starttime="20170524 23:15:33.179"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.181" starttime="20170524 23:15:33.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.182" starttime="20170524 23:15:33.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.184" starttime="20170524 23:15:33.183"></status>
</kw>
<msg timestamp="20170524 23:15:33.184" level="INFO">${newClient} = {"id":64,"name":"irkpzadvji","createDate":1451602800000,"email":"irkpzadvji@email.com","gender":"M","socialSecurityNumber":"730130915"}</msg>
<status status="PASS" endtime="20170524 23:15:33.185" starttime="20170524 23:15:33.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.186" starttime="20170524 23:15:33.185"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.186" starttime="20170524 23:15:33.066"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.187" critical="yes" starttime="20170524 23:15:33.065"></status>
</test>
<test id="s1-s1-s1-t2" name="Test2 - Get Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:33.192" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:33.192" starttime="20170524 23:15:33.191"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 23:15:33.193" level="INFO">${name} = xawkxhizbr</msg>
<status status="PASS" endtime="20170524 23:15:33.194" starttime="20170524 23:15:33.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.195" level="INFO">${name_suite} = xawkxhizbr</msg>
<status status="PASS" endtime="20170524 23:15:33.195" starttime="20170524 23:15:33.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 23:15:33.197" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 23:15:33.197" starttime="20170524 23:15:33.196"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.198" level="INFO">${email} = xawkxhizbr@email.com</msg>
<status status="PASS" endtime="20170524 23:15:33.199" starttime="20170524 23:15:33.198"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.200" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 23:15:33.200" starttime="20170524 23:15:33.199"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.203" level="INFO">${socialSecurityNumber} = 587098669</msg>
<status status="PASS" endtime="20170524 23:15:33.203" starttime="20170524 23:15:33.201"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:33.205" level="INFO">${dictionary} = {u'id': u'100', u'name': u'xawkxhizbr', u'createDate': u'1451602800000', u'email': u'xawkxhizbr@email.com', u'gender': u'M', u'socialSecurityNumber': u'587098669'}</msg>
<status status="PASS" endtime="20170524 23:15:33.205" starttime="20170524 23:15:33.203"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:33.207" level="INFO">${client_json} = {"id": "100", "name": "xawkxhizbr", "createDate": "1451602800000", "email": "xawkxhizbr@email.com", "gender": "M", "socialSecurityNumber": "587098669"}</msg>
<status status="PASS" endtime="20170524 23:15:33.207" starttime="20170524 23:15:33.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.209" starttime="20170524 23:15:33.208"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.210" starttime="20170524 23:15:33.209"></status>
</kw>
<msg timestamp="20170524 23:15:33.211" level="INFO">${request_body} = {"id": "100", "name": "xawkxhizbr", "createDate": "1451602800000", "email": "xawkxhizbr@email.com", "gender": "M", "socialSecurityNumber": "587098669"}</msg>
<status status="PASS" endtime="20170524 23:15:33.211" starttime="20170524 23:15:33.190"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.213" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.213" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.214" starttime="20170524 23:15:33.212"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.232" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:33.233" starttime="20170524 23:15:33.214"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.234" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:33.234" starttime="20170524 23:15:33.233"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.235" level="INFO">Request body set to "{"id": "100", "name": "xawkxhizbr", "createDate": "1451602800000", "email": "xawkxhizbr@email.com", "gender": "M", "socialSecurityNumber": "587098669"}".</msg>
<status status="PASS" endtime="20170524 23:15:33.235" starttime="20170524 23:15:33.235"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.249" starttime="20170524 23:15:33.236"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.258" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.258" starttime="20170524 23:15:33.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.260" starttime="20170524 23:15:33.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.263" starttime="20170524 23:15:33.261"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.267" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.267" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.267" starttime="20170524 23:15:33.266"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.282" starttime="20170524 23:15:33.268"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.283" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.283" starttime="20170524 23:15:33.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.284" starttime="20170524 23:15:33.284"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.289" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.290" starttime="20170524 23:15:33.285"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.295" starttime="20170524 23:15:33.290"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.297" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.297" starttime="20170524 23:15:33.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.298" starttime="20170524 23:15:33.298"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.299" level="INFO">${body_second_request} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.300" starttime="20170524 23:15:33.299"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.301" level="INFO">${last_index} = 49</msg>
<status status="PASS" endtime="20170524 23:15:33.302" starttime="20170524 23:15:33.300"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.304" level="INFO">${json_id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:33.304" starttime="20170524 23:15:33.302"></status>
</kw>
<msg timestamp="20170524 23:15:33.305" level="INFO">${clientId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:33.305" starttime="20170524 23:15:33.264"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.307" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/65</msg>
<status status="PASS" endtime="20170524 23:15:33.307" starttime="20170524 23:15:33.306"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.308" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.309" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.309" starttime="20170524 23:15:33.308"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.315" starttime="20170524 23:15:33.309"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.316" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.316" starttime="20170524 23:15:33.315"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.318" level="INFO">${client_body} = {"id":65,"name":"xawkxhizbr","createDate":1451602800000,"email":"xawkxhizbr@email.com","gender":"M","socialSecurityNumber":"587098669"}</msg>
<status status="PASS" endtime="20170524 23:15:33.318" starttime="20170524 23:15:33.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.319" starttime="20170524 23:15:33.319"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.320" starttime="20170524 23:15:33.320"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.322" starttime="20170524 23:15:33.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.323" starttime="20170524 23:15:33.322"></status>
</kw>
<msg timestamp="20170524 23:15:33.323" level="INFO">${newClient} = {"id":65,"name":"xawkxhizbr","createDate":1451602800000,"email":"xawkxhizbr@email.com","gender":"M","socialSecurityNumber":"587098669"}</msg>
<status status="PASS" endtime="20170524 23:15:33.323" starttime="20170524 23:15:33.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.324" starttime="20170524 23:15:33.324"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.325" starttime="20170524 23:15:33.189"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.327" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.327" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.327" starttime="20170524 23:15:33.326"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.338" starttime="20170524 23:15:33.328"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.340" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.340" starttime="20170524 23:15:33.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.341" starttime="20170524 23:15:33.340"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.344" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.344" starttime="20170524 23:15:33.341"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.349" starttime="20170524 23:15:33.344"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.351" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.351" starttime="20170524 23:15:33.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.352" starttime="20170524 23:15:33.351"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.353" level="INFO">${body_second_request} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.353" starttime="20170524 23:15:33.353"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.357" level="INFO">${last_index} = 49</msg>
<status status="PASS" endtime="20170524 23:15:33.357" starttime="20170524 23:15:33.354"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.359" level="INFO">${json_id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:33.359" starttime="20170524 23:15:33.358"></status>
</kw>
<msg timestamp="20170524 23:15:33.360" level="INFO">${clientId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:33.360" starttime="20170524 23:15:33.326"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.362" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/65</msg>
<status status="PASS" endtime="20170524 23:15:33.362" starttime="20170524 23:15:33.361"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.364" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.364" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.364" starttime="20170524 23:15:33.363"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.369" starttime="20170524 23:15:33.365"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.371" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.371" starttime="20170524 23:15:33.370"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.373" level="INFO">${client_body} = {"id":65,"name":"xawkxhizbr","createDate":1451602800000,"email":"xawkxhizbr@email.com","gender":"M","socialSecurityNumber":"587098669"}</msg>
<status status="PASS" endtime="20170524 23:15:33.373" starttime="20170524 23:15:33.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.375" starttime="20170524 23:15:33.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.376" starttime="20170524 23:15:33.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.378" starttime="20170524 23:15:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.379" starttime="20170524 23:15:33.378"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.380" starttime="20170524 23:15:33.325"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.380" critical="yes" starttime="20170524 23:15:33.188"></status>
</test>
<test id="s1-s1-s1-t3" name="Test3 - Get Total Number of Clients">
<kw name="Get Total Number of Clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.383" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.384" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.384" starttime="20170524 23:15:33.383"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.391" starttime="20170524 23:15:33.385"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.393" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.393" starttime="20170524 23:15:33.392"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.395" level="INFO">${response_body} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.395" starttime="20170524 23:15:33.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.396" starttime="20170524 23:15:33.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.398" starttime="20170524 23:15:33.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.399" starttime="20170524 23:15:33.398"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.400" starttime="20170524 23:15:33.382"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.400" critical="yes" starttime="20170524 23:15:33.381"></status>
</test>
<test id="s1-s1-s1-t4" name="Test4 - Get All Clients">
<kw name="Get All Clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.403" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.403" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.404" starttime="20170524 23:15:33.402"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.421" starttime="20170524 23:15:33.405"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.423" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.423" starttime="20170524 23:15:33.421"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.428" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.429" starttime="20170524 23:15:33.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.431" starttime="20170524 23:15:33.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.436" starttime="20170524 23:15:33.432"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<assign>
<var>${parsed}</var>
</assign>
<msg timestamp="20170524 23:15:33.439" level="INFO">${parsed} = [{u'name': u'JO\xc3O PAULO', u'gender': u'M', u'createDate': 1451602800000, u'id': 1, u'socialSecurityNumber': u'14190842', u'email': u'JP.ALENCAR@HOTMAIL.COM'}, {u'name': u'THALLYS', u'gender': u'F',...</msg>
<status status="PASS" endtime="20170524 23:15:33.439" starttime="20170524 23:15:33.437"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${parsed}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20170524 23:15:33.440" level="INFO">Length is 50</msg>
<msg timestamp="20170524 23:15:33.441" level="INFO">${length} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.441" starttime="20170524 23:15:33.440"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${length}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20170524 23:15:33.443" level="INFO">${length} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.443" starttime="20170524 23:15:33.442"></status>
</kw>
<kw name="Get Total Number of Clients" library="client_operations">
<assign>
<var>${count}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.445" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.445" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.446" starttime="20170524 23:15:33.444"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.454" starttime="20170524 23:15:33.446"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.457" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.457" starttime="20170524 23:15:33.455"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.459" level="INFO">${response_body} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.459" starttime="20170524 23:15:33.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.461" starttime="20170524 23:15:33.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.463" starttime="20170524 23:15:33.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.465" starttime="20170524 23:15:33.464"></status>
</kw>
<msg timestamp="20170524 23:15:33.466" level="INFO">${count} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.466" starttime="20170524 23:15:33.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.468" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<status status="PASS" endtime="20170524 23:15:33.468" starttime="20170524 23:15:33.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.471" starttime="20170524 23:15:33.469"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.472" starttime="20170524 23:15:33.401"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.472" critical="yes" starttime="20170524 23:15:33.401"></status>
</test>
<test id="s1-s1-s1-t5" name="Test5 - Update Client Name">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:33.480" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:33.481" starttime="20170524 23:15:33.479"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 23:15:33.482" level="INFO">${name} = nmngljijlt</msg>
<status status="PASS" endtime="20170524 23:15:33.483" starttime="20170524 23:15:33.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.485" level="INFO">${name_suite} = nmngljijlt</msg>
<status status="PASS" endtime="20170524 23:15:33.485" starttime="20170524 23:15:33.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 23:15:33.487" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 23:15:33.487" starttime="20170524 23:15:33.486"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.489" level="INFO">${email} = nmngljijlt@email.com</msg>
<status status="PASS" endtime="20170524 23:15:33.489" starttime="20170524 23:15:33.488"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.491" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 23:15:33.492" starttime="20170524 23:15:33.490"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.493" level="INFO">${socialSecurityNumber} = 685500639</msg>
<status status="PASS" endtime="20170524 23:15:33.494" starttime="20170524 23:15:33.492"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:33.496" level="INFO">${dictionary} = {u'id': u'100', u'name': u'nmngljijlt', u'createDate': u'1451602800000', u'email': u'nmngljijlt@email.com', u'gender': u'M', u'socialSecurityNumber': u'685500639'}</msg>
<status status="PASS" endtime="20170524 23:15:33.497" starttime="20170524 23:15:33.494"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:33.499" level="INFO">${client_json} = {"id": "100", "name": "nmngljijlt", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.499" starttime="20170524 23:15:33.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.500" starttime="20170524 23:15:33.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.502" starttime="20170524 23:15:33.501"></status>
</kw>
<msg timestamp="20170524 23:15:33.503" level="INFO">${request_body} = {"id": "100", "name": "nmngljijlt", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.503" starttime="20170524 23:15:33.478"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.505" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.505" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.505" starttime="20170524 23:15:33.503"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.507" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:33.508" starttime="20170524 23:15:33.506"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.509" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:33.509" starttime="20170524 23:15:33.508"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.511" level="INFO">Request body set to "{"id": "100", "name": "nmngljijlt", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}".</msg>
<status status="PASS" endtime="20170524 23:15:33.511" starttime="20170524 23:15:33.510"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.526" starttime="20170524 23:15:33.512"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.528" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.529" starttime="20170524 23:15:33.527"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.530" starttime="20170524 23:15:33.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.533" starttime="20170524 23:15:33.531"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.537" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.537" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.538" starttime="20170524 23:15:33.536"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.555" starttime="20170524 23:15:33.539"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.556" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.556" starttime="20170524 23:15:33.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.558" starttime="20170524 23:15:33.557"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.563" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.563" starttime="20170524 23:15:33.558"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.571" starttime="20170524 23:15:33.564"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.574" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.574" starttime="20170524 23:15:33.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.576" starttime="20170524 23:15:33.575"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.578" level="INFO">${body_second_request} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.578" starttime="20170524 23:15:33.577"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.580" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.580" starttime="20170524 23:15:33.579"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.581" level="INFO">${json_id} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.582" starttime="20170524 23:15:33.580"></status>
</kw>
<msg timestamp="20170524 23:15:33.583" level="INFO">${clientId} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.583" starttime="20170524 23:15:33.534"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.584" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/66</msg>
<status status="PASS" endtime="20170524 23:15:33.584" starttime="20170524 23:15:33.583"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.585" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.586" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.586" starttime="20170524 23:15:33.585"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.593" starttime="20170524 23:15:33.586"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.596" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.596" starttime="20170524 23:15:33.594"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.598" level="INFO">${client_body} = {"id":66,"name":"nmngljijlt","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.598" starttime="20170524 23:15:33.597"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.599" starttime="20170524 23:15:33.599"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.600" starttime="20170524 23:15:33.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.601" starttime="20170524 23:15:33.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.603" starttime="20170524 23:15:33.602"></status>
</kw>
<msg timestamp="20170524 23:15:33.603" level="INFO">${newClient} = {"id":66,"name":"nmngljijlt","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.603" starttime="20170524 23:15:33.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.605" starttime="20170524 23:15:33.604"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.605" starttime="20170524 23:15:33.477"></status>
</kw>
<kw name="Update Client Name" library="client_operations">
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${clientBody}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.610" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.610" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.611" starttime="20170524 23:15:33.609"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.626" starttime="20170524 23:15:33.612"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.628" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.628" starttime="20170524 23:15:33.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.631" starttime="20170524 23:15:33.629"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.635" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.636" starttime="20170524 23:15:33.632"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.644" starttime="20170524 23:15:33.636"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.648" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.648" starttime="20170524 23:15:33.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.650" starttime="20170524 23:15:33.649"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.652" level="INFO">${body_second_request} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.652" starttime="20170524 23:15:33.651"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.653" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.654" starttime="20170524 23:15:33.652"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.656" level="INFO">${json_id} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.656" starttime="20170524 23:15:33.654"></status>
</kw>
<msg timestamp="20170524 23:15:33.657" level="INFO">${clientId} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.658" starttime="20170524 23:15:33.608"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.660" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/66</msg>
<status status="PASS" endtime="20170524 23:15:33.660" starttime="20170524 23:15:33.658"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.662" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.662" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.662" starttime="20170524 23:15:33.661"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.669" starttime="20170524 23:15:33.663"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.670" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.671" starttime="20170524 23:15:33.670"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.672" level="INFO">${client_body} = {"id":66,"name":"nmngljijlt","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.673" starttime="20170524 23:15:33.671"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.675" starttime="20170524 23:15:33.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.677" starttime="20170524 23:15:33.676"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.678" starttime="20170524 23:15:33.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.680" starttime="20170524 23:15:33.679"></status>
</kw>
<msg timestamp="20170524 23:15:33.681" level="INFO">${clientBody} = {"id":66,"name":"nmngljijlt","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.681" starttime="20170524 23:15:33.607"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${clientBody}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${clientId}</var>
</assign>
<msg timestamp="20170524 23:15:33.683" level="INFO">${clientId} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.684" starttime="20170524 23:15:33.682"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${newName}</var>
</assign>
<msg timestamp="20170524 23:15:33.686" level="INFO">${newName} = qpkbqjfuxd</msg>
<status status="PASS" endtime="20170524 23:15:33.686" starttime="20170524 23:15:33.684"></status>
</kw>
<kw name="Update Client Data Name" library="client_operations">
<arguments>
<arg>${clientBody}</arg>
<arg>${newName}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:33.689" level="INFO">${id} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.689" starttime="20170524 23:15:33.688"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${update_value}</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 23:15:33.695" level="INFO">${name} = qpkbqjfuxd</msg>
<status status="PASS" endtime="20170524 23:15:33.695" starttime="20170524 23:15:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${updated_name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.698" level="INFO">${updated_name_suite} = qpkbqjfuxd</msg>
<status status="PASS" endtime="20170524 23:15:33.699" starttime="20170524 23:15:33.696"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/createDate</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 23:15:33.701" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 23:15:33.701" starttime="20170524 23:15:33.699"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/email</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.703" level="INFO">${email} = "nmngljijlt@email.com"</msg>
<status status="PASS" endtime="20170524 23:15:33.703" starttime="20170524 23:15:33.702"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/gender</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.706" level="INFO">${gender} = "M"</msg>
<status status="PASS" endtime="20170524 23:15:33.706" starttime="20170524 23:15:33.704"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/socialSecurityNumber</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.708" level="INFO">${socialSecurityNumber} = "685500639"</msg>
<status status="PASS" endtime="20170524 23:15:33.708" starttime="20170524 23:15:33.707"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${email}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.710" level="INFO">${email} = nmngljijlt@email.com</msg>
<status status="PASS" endtime="20170524 23:15:33.710" starttime="20170524 23:15:33.709"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${gender}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.712" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 23:15:33.713" starttime="20170524 23:15:33.711"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${socialSecurityNumber}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.714" level="INFO">${socialSecurityNumber} = 685500639</msg>
<status status="PASS" endtime="20170524 23:15:33.715" starttime="20170524 23:15:33.713"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:33.717" level="INFO">${dictionary} = {u'id': '66', u'name': u'qpkbqjfuxd', u'createDate': '1451602800000', u'email': u'nmngljijlt@email.com', u'gender': u'M', u'socialSecurityNumber': u'685500639'}</msg>
<status status="PASS" endtime="20170524 23:15:33.718" starttime="20170524 23:15:33.715"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:33.720" level="INFO">${client_json} = {"id": "66", "name": "qpkbqjfuxd", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.721" starttime="20170524 23:15:33.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Updated json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.723" starttime="20170524 23:15:33.722"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.725" starttime="20170524 23:15:33.724"></status>
</kw>
<msg timestamp="20170524 23:15:33.726" level="INFO">${request_body} = {"id": "66", "name": "qpkbqjfuxd", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.727" starttime="20170524 23:15:33.687"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.728" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.729" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.729" starttime="20170524 23:15:33.728"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.731" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:33.731" starttime="20170524 23:15:33.730"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.733" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:33.734" starttime="20170524 23:15:33.732"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.735" level="INFO">Request body set to "{"id": "66", "name": "qpkbqjfuxd", "createDate": "1451602800000", "email": "nmngljijlt@email.com", "gender": "M", "socialSecurityNumber": "685500639"}".</msg>
<status status="PASS" endtime="20170524 23:15:33.736" starttime="20170524 23:15:33.734"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${put_update_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${put_update_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.738" level="INFO">${put_update_client_endpoint} = /hotel-rest/webresources/client/66</msg>
<status status="PASS" endtime="20170524 23:15:33.738" starttime="20170524 23:15:33.737"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${put_update_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.753" starttime="20170524 23:15:33.739"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.754" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.754" starttime="20170524 23:15:33.753"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.755" starttime="20170524 23:15:33.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.756" starttime="20170524 23:15:33.755"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${updatedClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.759" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.759" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.760" starttime="20170524 23:15:33.758"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.768" starttime="20170524 23:15:33.760"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.769" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.770" starttime="20170524 23:15:33.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.771" starttime="20170524 23:15:33.770"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.773" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.774" starttime="20170524 23:15:33.771"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.780" starttime="20170524 23:15:33.774"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.781" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.781" starttime="20170524 23:15:33.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.782" starttime="20170524 23:15:33.782"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.783" level="INFO">${body_second_request} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.783" starttime="20170524 23:15:33.783"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.784" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.784" starttime="20170524 23:15:33.784"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.786" level="INFO">${json_id} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.786" starttime="20170524 23:15:33.785"></status>
</kw>
<msg timestamp="20170524 23:15:33.786" level="INFO">${clientId} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.786" starttime="20170524 23:15:33.757"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.788" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/66</msg>
<status status="PASS" endtime="20170524 23:15:33.788" starttime="20170524 23:15:33.787"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.789" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.789" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.789" starttime="20170524 23:15:33.788"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.795" starttime="20170524 23:15:33.790"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.797" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.797" starttime="20170524 23:15:33.796"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.798" level="INFO">${client_body} = {"id":66,"name":"qpkbqjfuxd","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.799" starttime="20170524 23:15:33.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.799" starttime="20170524 23:15:33.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.800" starttime="20170524 23:15:33.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.801" starttime="20170524 23:15:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.803" starttime="20170524 23:15:33.802"></status>
</kw>
<msg timestamp="20170524 23:15:33.803" level="INFO">${updatedClient} = {"id":66,"name":"qpkbqjfuxd","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:33.803" starttime="20170524 23:15:33.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${updatedClient}</arg>
<arg>${updated_name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.804" starttime="20170524 23:15:33.804"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.804" starttime="20170524 23:15:33.606"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.805" critical="yes" starttime="20170524 23:15:33.474"></status>
</test>
<test id="s1-s1-s1-t6" name="Test6 - Delete Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:33.808" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:33.808" starttime="20170524 23:15:33.807"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 23:15:33.809" level="INFO">${name} = uliqvbgmge</msg>
<status status="PASS" endtime="20170524 23:15:33.809" starttime="20170524 23:15:33.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.810" level="INFO">${name_suite} = uliqvbgmge</msg>
<status status="PASS" endtime="20170524 23:15:33.810" starttime="20170524 23:15:33.810"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 23:15:33.811" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 23:15:33.811" starttime="20170524 23:15:33.811"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 23:15:33.812" level="INFO">${email} = uliqvbgmge@email.com</msg>
<status status="PASS" endtime="20170524 23:15:33.812" starttime="20170524 23:15:33.812"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 23:15:33.814" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 23:15:33.814" starttime="20170524 23:15:33.813"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 23:15:33.816" level="INFO">${socialSecurityNumber} = 943688344</msg>
<status status="PASS" endtime="20170524 23:15:33.816" starttime="20170524 23:15:33.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:33.818" level="INFO">${dictionary} = {u'id': u'100', u'name': u'uliqvbgmge', u'createDate': u'1451602800000', u'email': u'uliqvbgmge@email.com', u'gender': u'M', u'socialSecurityNumber': u'943688344'}</msg>
<status status="PASS" endtime="20170524 23:15:33.818" starttime="20170524 23:15:33.816"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:33.819" level="INFO">${client_json} = {"id": "100", "name": "uliqvbgmge", "createDate": "1451602800000", "email": "uliqvbgmge@email.com", "gender": "M", "socialSecurityNumber": "943688344"}</msg>
<status status="PASS" endtime="20170524 23:15:33.819" starttime="20170524 23:15:33.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.820" starttime="20170524 23:15:33.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.821" starttime="20170524 23:15:33.820"></status>
</kw>
<msg timestamp="20170524 23:15:33.821" level="INFO">${request_body} = {"id": "100", "name": "uliqvbgmge", "createDate": "1451602800000", "email": "uliqvbgmge@email.com", "gender": "M", "socialSecurityNumber": "943688344"}</msg>
<status status="PASS" endtime="20170524 23:15:33.821" starttime="20170524 23:15:33.807"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.822" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.822" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.823" starttime="20170524 23:15:33.822"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.824" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:33.824" starttime="20170524 23:15:33.823"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.825" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:33.825" starttime="20170524 23:15:33.824"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.826" level="INFO">Request body set to "{"id": "100", "name": "uliqvbgmge", "createDate": "1451602800000", "email": "uliqvbgmge@email.com", "gender": "M", "socialSecurityNumber": "943688344"}".</msg>
<status status="PASS" endtime="20170524 23:15:33.826" starttime="20170524 23:15:33.825"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.839" starttime="20170524 23:15:33.826"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.840" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.840" starttime="20170524 23:15:33.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.842" starttime="20170524 23:15:33.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.843" starttime="20170524 23:15:33.842"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.845" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.845" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.846" starttime="20170524 23:15:33.845"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.856" starttime="20170524 23:15:33.846"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.858" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.858" starttime="20170524 23:15:33.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.860" starttime="20170524 23:15:33.859"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.865" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.865" starttime="20170524 23:15:33.861"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.872" starttime="20170524 23:15:33.866"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.874" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.874" starttime="20170524 23:15:33.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.875" starttime="20170524 23:15:33.874"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.876" level="INFO">${body_second_request} = 52</msg>
<status status="PASS" endtime="20170524 23:15:33.876" starttime="20170524 23:15:33.875"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.877" level="INFO">${last_index} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.877" starttime="20170524 23:15:33.876"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.879" level="INFO">${json_id} = 67</msg>
<status status="PASS" endtime="20170524 23:15:33.879" starttime="20170524 23:15:33.878"></status>
</kw>
<msg timestamp="20170524 23:15:33.880" level="INFO">${clientId} = 67</msg>
<status status="PASS" endtime="20170524 23:15:33.880" starttime="20170524 23:15:33.843"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.881" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/67</msg>
<status status="PASS" endtime="20170524 23:15:33.881" starttime="20170524 23:15:33.881"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.882" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.882" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.883" starttime="20170524 23:15:33.882"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.888" starttime="20170524 23:15:33.883"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.889" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.889" starttime="20170524 23:15:33.888"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:33.890" level="INFO">${client_body} = {"id":67,"name":"uliqvbgmge","createDate":1451602800000,"email":"uliqvbgmge@email.com","gender":"M","socialSecurityNumber":"943688344"}</msg>
<status status="PASS" endtime="20170524 23:15:33.890" starttime="20170524 23:15:33.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.891" starttime="20170524 23:15:33.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.892" starttime="20170524 23:15:33.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.894" starttime="20170524 23:15:33.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.895" starttime="20170524 23:15:33.894"></status>
</kw>
<msg timestamp="20170524 23:15:33.895" level="INFO">${newClient} = {"id":67,"name":"uliqvbgmge","createDate":1451602800000,"email":"uliqvbgmge@email.com","gender":"M","socialSecurityNumber":"943688344"}</msg>
<status status="PASS" endtime="20170524 23:15:33.895" starttime="20170524 23:15:33.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.896" starttime="20170524 23:15:33.896"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:33.897" starttime="20170524 23:15:33.806"></status>
</kw>
<kw name="Delete Client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.899" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.899" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.899" starttime="20170524 23:15:33.898"></status>
</kw>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.901" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.902" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.902" starttime="20170524 23:15:33.900"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.911" starttime="20170524 23:15:33.903"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.912" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.913" starttime="20170524 23:15:33.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.914" starttime="20170524 23:15:33.913"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.917" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.917" starttime="20170524 23:15:33.914"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.923" starttime="20170524 23:15:33.917"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.924" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.925" starttime="20170524 23:15:33.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.927" starttime="20170524 23:15:33.925"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.929" level="INFO">${body_second_request} = 52</msg>
<status status="PASS" endtime="20170524 23:15:33.930" starttime="20170524 23:15:33.928"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.931" level="INFO">${last_index} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.932" starttime="20170524 23:15:33.930"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.934" level="INFO">${json_id} = 67</msg>
<status status="PASS" endtime="20170524 23:15:33.935" starttime="20170524 23:15:33.932"></status>
</kw>
<msg timestamp="20170524 23:15:33.936" level="INFO">${clientId} = 67</msg>
<status status="PASS" endtime="20170524 23:15:33.936" starttime="20170524 23:15:33.899"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientId}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.938" starttime="20170524 23:15:33.937"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${delete_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${delete_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.940" level="INFO">${delete_client_endpoint} = /hotel-rest/webresources/client/67</msg>
<status status="PASS" endtime="20170524 23:15:33.940" starttime="20170524 23:15:33.938"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.953" starttime="20170524 23:15:33.941"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:33.954" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:33.954" starttime="20170524 23:15:33.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.955" starttime="20170524 23:15:33.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.956" starttime="20170524 23:15:33.955"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${lastClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:33.958" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:33.958" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:33.959" starttime="20170524 23:15:33.958"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.972" starttime="20170524 23:15:33.959"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.973" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.973" starttime="20170524 23:15:33.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.974" starttime="20170524 23:15:33.974"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.977" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 23:15:33.977" starttime="20170524 23:15:33.975"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.985" starttime="20170524 23:15:33.978"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.986" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:33.987" starttime="20170524 23:15:33.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:33.988" starttime="20170524 23:15:33.987"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 23:15:33.990" level="INFO">${body_second_request} = 51</msg>
<status status="PASS" endtime="20170524 23:15:33.990" starttime="20170524 23:15:33.989"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:33.991" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:33.992" starttime="20170524 23:15:33.990"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:33.995" level="INFO">${json_id} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.995" starttime="20170524 23:15:33.993"></status>
</kw>
<msg timestamp="20170524 23:15:33.996" level="INFO">${clientId} = 66</msg>
<status status="PASS" endtime="20170524 23:15:33.997" starttime="20170524 23:15:33.957"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:33.998" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/66</msg>
<status status="PASS" endtime="20170524 23:15:33.998" starttime="20170524 23:15:33.997"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.000" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.001" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.001" starttime="20170524 23:15:34.000"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.009" starttime="20170524 23:15:34.002"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.011" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.012" starttime="20170524 23:15:34.010"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.014" level="INFO">${client_body} = {"id":66,"name":"qpkbqjfuxd","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:34.015" starttime="20170524 23:15:34.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.017" starttime="20170524 23:15:34.016"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.019" starttime="20170524 23:15:34.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.020" starttime="20170524 23:15:34.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.021" starttime="20170524 23:15:34.020"></status>
</kw>
<msg timestamp="20170524 23:15:34.022" level="INFO">${lastClient} = {"id":66,"name":"qpkbqjfuxd","createDate":1451602800000,"email":"nmngljijlt@email.com","gender":"M","socialSecurityNumber":"685500639"}</msg>
<status status="PASS" endtime="20170524 23:15:34.022" starttime="20170524 23:15:33.956"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${lastClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.025" starttime="20170524 23:15:34.023"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.025" starttime="20170524 23:15:33.897"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.026" critical="yes" starttime="20170524 23:15:33.806"></status>
</test>
<test id="s1-s1-s1-t7" name="Test7 - Create Bedroom Busy Top bed twin">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:34.031" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:34.031" starttime="20170524 23:15:34.030"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 23:15:34.032" level="INFO">${description} = NVPWTABDNFVQVTF</msg>
<status status="PASS" endtime="20170524 23:15:34.032" starttime="20170524 23:15:34.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.034" level="INFO">${room_description_suite} = NVPWTABDNFVQVTF</msg>
<status status="PASS" endtime="20170524 23:15:34.034" starttime="20170524 23:15:34.033"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 23:15:34.035" level="INFO">${floor} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.035" starttime="20170524 23:15:34.035"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 23:15:34.036" level="INFO">${number} = 8997</msg>
<status status="PASS" endtime="20170524 23:15:34.036" starttime="20170524 23:15:34.036"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${priceDaily_number_first}</var>
</assign>
<msg timestamp="20170524 23:15:34.037" level="INFO">${priceDaily_number_first} = 6</msg>
<status status="PASS" endtime="20170524 23:15:34.038" starttime="20170524 23:15:34.037"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily_number_last}</var>
</assign>
<msg timestamp="20170524 23:15:34.039" level="INFO">${priceDaily_number_last} = 36</msg>
<status status="PASS" endtime="20170524 23:15:34.039" starttime="20170524 23:15:34.038"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${priceDaily_number_first}</arg>
<arg>${priceDaily_number_last}</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 23:15:34.040" level="INFO">${priceDaily} = 636</msg>
<status status="PASS" endtime="20170524 23:15:34.041" starttime="20170524 23:15:34.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 23:15:34.042" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 23:15:34.042" starttime="20170524 23:15:34.041"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 23:15:34.043" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 23:15:34.043" starttime="20170524 23:15:34.042"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>BUSY</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.044" level="INFO">${statusName} = BUSY</msg>
<status status="PASS" endtime="20170524 23:15:34.044" starttime="20170524 23:15:34.044"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 23:15:34.045" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.045" starttime="20170524 23:15:34.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>TOP BED TWIN</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.046" level="INFO">${typeName} = TOP BED TWIN</msg>
<status status="PASS" endtime="20170524 23:15:34.046" starttime="20170524 23:15:34.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 23:15:34.048" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'BUSY'}</msg>
<status status="PASS" endtime="20170524 23:15:34.048" starttime="20170524 23:15:34.047"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.049" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'TOP BED TWIN'}</msg>
<status status="PASS" endtime="20170524 23:15:34.049" starttime="20170524 23:15:34.048"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:34.051" level="INFO">${dictionary} = {u'id': u'100', u'description': u'NVPWTABDNFVQVTF', u'floor': u'4', u'number': u'8997', u'priceDaily': u'636', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'BUSY'}, u'typeBedroomId': {u'...</msg>
<status status="PASS" endtime="20170524 23:15:34.051" starttime="20170524 23:15:34.050"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:34.052" level="INFO">${client_json} = {"id": "100", "description": "NVPWTABDNFVQVTF", "floor": "4", "number": "8997", "priceDaily": "636", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.052" starttime="20170524 23:15:34.051"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.053" starttime="20170524 23:15:34.052"></status>
</kw>
<msg timestamp="20170524 23:15:34.053" level="INFO">${request_body} = {"id": "100", "description": "NVPWTABDNFVQVTF", "floor": "4", "number": "8997", "priceDaily": "636", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.053" starttime="20170524 23:15:34.029"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.054" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.055" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.055" starttime="20170524 23:15:34.054"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.056" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:34.056" starttime="20170524 23:15:34.055"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.057" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:34.058" starttime="20170524 23:15:34.057"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.059" level="INFO">Request body set to "{"id": "100", "description": "NVPWTABDNFVQVTF", "floor": "4", "number": "8997", "priceDaily": "636", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "TOP BED TWIN"}}".</msg>
<status status="PASS" endtime="20170524 23:15:34.059" starttime="20170524 23:15:34.058"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.071" starttime="20170524 23:15:34.059"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.073" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:34.073" starttime="20170524 23:15:34.072"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.075" starttime="20170524 23:15:34.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.076" starttime="20170524 23:15:34.075"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.079" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.080" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.080" starttime="20170524 23:15:34.079"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.087" starttime="20170524 23:15:34.081"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.089" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.089" starttime="20170524 23:15:34.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.091" starttime="20170524 23:15:34.090"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.092" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.093" starttime="20170524 23:15:34.091"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.096" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.097" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.097" starttime="20170524 23:15:34.095"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.105" starttime="20170524 23:15:34.098"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.106" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.106" starttime="20170524 23:15:34.105"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.107" level="INFO">${response_body} = 49</msg>
<status status="PASS" endtime="20170524 23:15:34.107" starttime="20170524 23:15:34.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.108" starttime="20170524 23:15:34.107"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.109" starttime="20170524 23:15:34.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.110" starttime="20170524 23:15:34.109"></status>
</kw>
<msg timestamp="20170524 23:15:34.111" level="INFO">${number_of_bedrooms} = 49</msg>
<status status="PASS" endtime="20170524 23:15:34.111" starttime="20170524 23:15:34.093"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.113" level="INFO">${last_index} = 48</msg>
<status status="PASS" endtime="20170524 23:15:34.113" starttime="20170524 23:15:34.112"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.115" level="INFO">${json_id} = 63</msg>
<status status="PASS" endtime="20170524 23:15:34.115" starttime="20170524 23:15:34.113"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.117" starttime="20170524 23:15:34.116"></status>
</kw>
<msg timestamp="20170524 23:15:34.118" level="INFO">${bedroomId} = 63</msg>
<status status="PASS" endtime="20170524 23:15:34.118" starttime="20170524 23:15:34.078"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.119" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/63</msg>
<status status="PASS" endtime="20170524 23:15:34.119" starttime="20170524 23:15:34.118"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.124" starttime="20170524 23:15:34.120"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.126" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.126" starttime="20170524 23:15:34.125"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.128" level="INFO">${bedroom_body} = {"id":63,"description":"NVPWTABDNFVQVTF","floor":4,"number":8997,"priceDaily":636,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.128" starttime="20170524 23:15:34.127"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.129" starttime="20170524 23:15:34.128"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.131" starttime="20170524 23:15:34.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.133" starttime="20170524 23:15:34.132"></status>
</kw>
<msg timestamp="20170524 23:15:34.135" level="INFO">${newBedroom} = {"id":63,"description":"NVPWTABDNFVQVTF","floor":4,"number":8997,"priceDaily":636,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.135" starttime="20170524 23:15:34.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.136" starttime="20170524 23:15:34.135"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.137" starttime="20170524 23:15:34.029"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.138" critical="yes" starttime="20170524 23:15:34.027"></status>
</test>
<test id="s1-s1-s1-t8" name="Test8 - Get Bedroom">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:34.141" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:34.142" starttime="20170524 23:15:34.141"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 23:15:34.143" level="INFO">${description} = QMTOVBEZXUGUCOQ</msg>
<status status="PASS" endtime="20170524 23:15:34.143" starttime="20170524 23:15:34.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.144" level="INFO">${room_description_suite} = QMTOVBEZXUGUCOQ</msg>
<status status="PASS" endtime="20170524 23:15:34.144" starttime="20170524 23:15:34.143"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 23:15:34.145" level="INFO">${floor} = 9</msg>
<status status="PASS" endtime="20170524 23:15:34.145" starttime="20170524 23:15:34.144"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 23:15:34.146" level="INFO">${number} = 4112</msg>
<status status="PASS" endtime="20170524 23:15:34.146" starttime="20170524 23:15:34.146"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${priceDaily_number_first}</var>
</assign>
<msg timestamp="20170524 23:15:34.147" level="INFO">${priceDaily_number_first} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.147" starttime="20170524 23:15:34.147"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily_number_last}</var>
</assign>
<msg timestamp="20170524 23:15:34.148" level="INFO">${priceDaily_number_last} = 00</msg>
<status status="PASS" endtime="20170524 23:15:34.148" starttime="20170524 23:15:34.148"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${priceDaily_number_first}</arg>
<arg>${priceDaily_number_last}</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 23:15:34.149" level="INFO">${priceDaily} = 400</msg>
<status status="PASS" endtime="20170524 23:15:34.150" starttime="20170524 23:15:34.149"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 23:15:34.151" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 23:15:34.151" starttime="20170524 23:15:34.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 23:15:34.152" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 23:15:34.152" starttime="20170524 23:15:34.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>BUSY</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.153" level="INFO">${statusName} = BUSY</msg>
<status status="PASS" endtime="20170524 23:15:34.153" starttime="20170524 23:15:34.152"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 23:15:34.154" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.154" starttime="20170524 23:15:34.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>TOP BED TWIN</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.155" level="INFO">${typeName} = TOP BED TWIN</msg>
<status status="PASS" endtime="20170524 23:15:34.155" starttime="20170524 23:15:34.154"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 23:15:34.156" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'BUSY'}</msg>
<status status="PASS" endtime="20170524 23:15:34.157" starttime="20170524 23:15:34.155"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.158" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'TOP BED TWIN'}</msg>
<status status="PASS" endtime="20170524 23:15:34.158" starttime="20170524 23:15:34.157"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:34.160" level="INFO">${dictionary} = {u'id': u'100', u'description': u'QMTOVBEZXUGUCOQ', u'floor': u'9', u'number': u'4112', u'priceDaily': u'400', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'BUSY'}, u'typeBedroomId': {u'...</msg>
<status status="PASS" endtime="20170524 23:15:34.160" starttime="20170524 23:15:34.158"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:34.161" level="INFO">${client_json} = {"id": "100", "description": "QMTOVBEZXUGUCOQ", "floor": "9", "number": "4112", "priceDaily": "400", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.161" starttime="20170524 23:15:34.160"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.162" starttime="20170524 23:15:34.161"></status>
</kw>
<msg timestamp="20170524 23:15:34.162" level="INFO">${request_body} = {"id": "100", "description": "QMTOVBEZXUGUCOQ", "floor": "9", "number": "4112", "priceDaily": "400", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.163" starttime="20170524 23:15:34.140"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.164" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.164" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.164" starttime="20170524 23:15:34.163"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.165" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:34.165" starttime="20170524 23:15:34.164"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.166" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:34.166" starttime="20170524 23:15:34.166"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.167" level="INFO">Request body set to "{"id": "100", "description": "QMTOVBEZXUGUCOQ", "floor": "9", "number": "4112", "priceDaily": "400", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "TOP BED TWIN"}}".</msg>
<status status="PASS" endtime="20170524 23:15:34.168" starttime="20170524 23:15:34.167"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.181" starttime="20170524 23:15:34.168"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.182" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:34.182" starttime="20170524 23:15:34.182"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.183" starttime="20170524 23:15:34.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.184" starttime="20170524 23:15:34.184"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.187" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.187" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.187" starttime="20170524 23:15:34.186"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.195" starttime="20170524 23:15:34.188"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.196" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.196" starttime="20170524 23:15:34.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.197" starttime="20170524 23:15:34.196"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.198" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.198" starttime="20170524 23:15:34.197"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.200" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.200" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.200" starttime="20170524 23:15:34.199"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.206" starttime="20170524 23:15:34.200"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.207" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.207" starttime="20170524 23:15:34.206"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.208" level="INFO">${response_body} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.208" starttime="20170524 23:15:34.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.209" starttime="20170524 23:15:34.208"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.210" starttime="20170524 23:15:34.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.211" starttime="20170524 23:15:34.210"></status>
</kw>
<msg timestamp="20170524 23:15:34.211" level="INFO">${number_of_bedrooms} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.212" starttime="20170524 23:15:34.198"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.213" level="INFO">${last_index} = 49</msg>
<status status="PASS" endtime="20170524 23:15:34.213" starttime="20170524 23:15:34.212"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.214" level="INFO">${json_id} = 64</msg>
<status status="PASS" endtime="20170524 23:15:34.215" starttime="20170524 23:15:34.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.215" starttime="20170524 23:15:34.215"></status>
</kw>
<msg timestamp="20170524 23:15:34.216" level="INFO">${bedroomId} = 64</msg>
<status status="PASS" endtime="20170524 23:15:34.216" starttime="20170524 23:15:34.186"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.217" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/64</msg>
<status status="PASS" endtime="20170524 23:15:34.217" starttime="20170524 23:15:34.216"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.221" starttime="20170524 23:15:34.218"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.222" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.223" starttime="20170524 23:15:34.222"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.224" level="INFO">${bedroom_body} = {"id":64,"description":"QMTOVBEZXUGUCOQ","floor":9,"number":4112,"priceDaily":400,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.224" starttime="20170524 23:15:34.223"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.225" starttime="20170524 23:15:34.224"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.226" starttime="20170524 23:15:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.227" starttime="20170524 23:15:34.226"></status>
</kw>
<msg timestamp="20170524 23:15:34.227" level="INFO">${newBedroom} = {"id":64,"description":"QMTOVBEZXUGUCOQ","floor":9,"number":4112,"priceDaily":400,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.228" starttime="20170524 23:15:34.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.229" starttime="20170524 23:15:34.228"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.230" starttime="20170524 23:15:34.139"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.232" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.232" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.233" starttime="20170524 23:15:34.232"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.241" starttime="20170524 23:15:34.233"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.242" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.242" starttime="20170524 23:15:34.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.243" starttime="20170524 23:15:34.242"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.244" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.244" starttime="20170524 23:15:34.243"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.246" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.246" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.246" starttime="20170524 23:15:34.245"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.252" starttime="20170524 23:15:34.247"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.253" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.253" starttime="20170524 23:15:34.252"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.254" level="INFO">${response_body} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.254" starttime="20170524 23:15:34.253"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.255" starttime="20170524 23:15:34.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.256" starttime="20170524 23:15:34.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.257" starttime="20170524 23:15:34.257"></status>
</kw>
<msg timestamp="20170524 23:15:34.258" level="INFO">${number_of_bedrooms} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.258" starttime="20170524 23:15:34.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.259" level="INFO">${last_index} = 49</msg>
<status status="PASS" endtime="20170524 23:15:34.259" starttime="20170524 23:15:34.258"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.262" level="INFO">${json_id} = 64</msg>
<status status="PASS" endtime="20170524 23:15:34.262" starttime="20170524 23:15:34.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.263" starttime="20170524 23:15:34.262"></status>
</kw>
<msg timestamp="20170524 23:15:34.264" level="INFO">${bedroomId} = 64</msg>
<status status="PASS" endtime="20170524 23:15:34.264" starttime="20170524 23:15:34.231"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.265" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/64</msg>
<status status="PASS" endtime="20170524 23:15:34.265" starttime="20170524 23:15:34.265"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.269" starttime="20170524 23:15:34.266"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.270" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.270" starttime="20170524 23:15:34.270"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.271" level="INFO">${bedroom_body} = {"id":64,"description":"QMTOVBEZXUGUCOQ","floor":9,"number":4112,"priceDaily":400,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.272" starttime="20170524 23:15:34.271"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.274" starttime="20170524 23:15:34.272"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.276" starttime="20170524 23:15:34.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.278" starttime="20170524 23:15:34.277"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.279" starttime="20170524 23:15:34.231"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.280" critical="yes" starttime="20170524 23:15:34.138"></status>
</test>
<test id="s1-s1-s1-t9" name="Test9 - Get All Bedrooms">
<kw name="Get All Bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.283" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.283" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.284" starttime="20170524 23:15:34.282"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.291" starttime="20170524 23:15:34.284"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.292" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.293" starttime="20170524 23:15:34.291"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.294" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.294" starttime="20170524 23:15:34.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.296" starttime="20170524 23:15:34.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.298" starttime="20170524 23:15:34.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.299" starttime="20170524 23:15:34.299"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.300" starttime="20170524 23:15:34.281"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.300" critical="yes" starttime="20170524 23:15:34.280"></status>
</test>
<test id="s1-s1-s1-t10" name="Test10 - Update Bedroom">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:34.303" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 23:15:34.303" starttime="20170524 23:15:34.303"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 23:15:34.304" level="INFO">${description} = TPNQYJOUJELDHGL</msg>
<status status="PASS" endtime="20170524 23:15:34.305" starttime="20170524 23:15:34.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.306" level="INFO">${room_description_suite} = TPNQYJOUJELDHGL</msg>
<status status="PASS" endtime="20170524 23:15:34.306" starttime="20170524 23:15:34.305"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 23:15:34.307" level="INFO">${floor} = 0</msg>
<status status="PASS" endtime="20170524 23:15:34.307" starttime="20170524 23:15:34.307"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 23:15:34.308" level="INFO">${number} = 5424</msg>
<status status="PASS" endtime="20170524 23:15:34.308" starttime="20170524 23:15:34.308"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${priceDaily_number_first}</var>
</assign>
<msg timestamp="20170524 23:15:34.309" level="INFO">${priceDaily_number_first} = 9</msg>
<status status="PASS" endtime="20170524 23:15:34.310" starttime="20170524 23:15:34.309"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily_number_last}</var>
</assign>
<msg timestamp="20170524 23:15:34.310" level="INFO">${priceDaily_number_last} = 91</msg>
<status status="PASS" endtime="20170524 23:15:34.311" starttime="20170524 23:15:34.310"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${priceDaily_number_first}</arg>
<arg>${priceDaily_number_last}</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 23:15:34.312" level="INFO">${priceDaily} = 991</msg>
<status status="PASS" endtime="20170524 23:15:34.312" starttime="20170524 23:15:34.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 23:15:34.313" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 23:15:34.313" starttime="20170524 23:15:34.312"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 23:15:34.315" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 23:15:34.315" starttime="20170524 23:15:34.314"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>BUSY</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.316" level="INFO">${statusName} = BUSY</msg>
<status status="PASS" endtime="20170524 23:15:34.316" starttime="20170524 23:15:34.315"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 23:15:34.317" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.317" starttime="20170524 23:15:34.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>TOP BED TWIN</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.318" level="INFO">${typeName} = TOP BED TWIN</msg>
<status status="PASS" endtime="20170524 23:15:34.319" starttime="20170524 23:15:34.318"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 23:15:34.320" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'BUSY'}</msg>
<status status="PASS" endtime="20170524 23:15:34.320" starttime="20170524 23:15:34.319"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.321" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'TOP BED TWIN'}</msg>
<status status="PASS" endtime="20170524 23:15:34.322" starttime="20170524 23:15:34.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:34.323" level="INFO">${dictionary} = {u'id': u'100', u'description': u'TPNQYJOUJELDHGL', u'floor': u'0', u'number': u'5424', u'priceDaily': u'991', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'BUSY'}, u'typeBedroomId': {u'...</msg>
<status status="PASS" endtime="20170524 23:15:34.324" starttime="20170524 23:15:34.322"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:34.325" level="INFO">${client_json} = {"id": "100", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "991", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.325" starttime="20170524 23:15:34.324"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.326" starttime="20170524 23:15:34.325"></status>
</kw>
<msg timestamp="20170524 23:15:34.327" level="INFO">${request_body} = {"id": "100", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "991", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "...</msg>
<status status="PASS" endtime="20170524 23:15:34.327" starttime="20170524 23:15:34.302"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.330" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.330" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.331" starttime="20170524 23:15:34.328"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.332" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:34.332" starttime="20170524 23:15:34.331"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.333" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:34.334" starttime="20170524 23:15:34.333"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.335" level="INFO">Request body set to "{"id": "100", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "991", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "TOP BED TWIN"}}".</msg>
<status status="PASS" endtime="20170524 23:15:34.336" starttime="20170524 23:15:34.334"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.349" starttime="20170524 23:15:34.336"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.350" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:34.350" starttime="20170524 23:15:34.349"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.351" starttime="20170524 23:15:34.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.352" starttime="20170524 23:15:34.352"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.354" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.355" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.355" starttime="20170524 23:15:34.354"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.363" starttime="20170524 23:15:34.356"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.364" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.364" starttime="20170524 23:15:34.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.365" starttime="20170524 23:15:34.365"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.366" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.366" starttime="20170524 23:15:34.366"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.368" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.368" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.368" starttime="20170524 23:15:34.367"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.374" starttime="20170524 23:15:34.369"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.375" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.375" starttime="20170524 23:15:34.375"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.376" level="INFO">${response_body} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.377" starttime="20170524 23:15:34.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.378" starttime="20170524 23:15:34.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.379" starttime="20170524 23:15:34.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.380" starttime="20170524 23:15:34.380"></status>
</kw>
<msg timestamp="20170524 23:15:34.381" level="INFO">${number_of_bedrooms} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.381" starttime="20170524 23:15:34.367"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.383" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.383" starttime="20170524 23:15:34.382"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.385" level="INFO">${json_id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.385" starttime="20170524 23:15:34.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.387" starttime="20170524 23:15:34.386"></status>
</kw>
<msg timestamp="20170524 23:15:34.387" level="INFO">${bedroomId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.388" starttime="20170524 23:15:34.353"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.389" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/65</msg>
<status status="PASS" endtime="20170524 23:15:34.389" starttime="20170524 23:15:34.388"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.393" starttime="20170524 23:15:34.389"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.394" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.395" starttime="20170524 23:15:34.394"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.396" level="INFO">${bedroom_body} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":991,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.396" starttime="20170524 23:15:34.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.397" starttime="20170524 23:15:34.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.398" starttime="20170524 23:15:34.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.399" starttime="20170524 23:15:34.398"></status>
</kw>
<msg timestamp="20170524 23:15:34.399" level="INFO">${newBedroom} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":991,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.399" starttime="20170524 23:15:34.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.400" starttime="20170524 23:15:34.399"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.401" starttime="20170524 23:15:34.302"></status>
</kw>
<kw name="Update Bedroom Price" library="bedroom_operations">
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomBody}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.403" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.403" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.403" starttime="20170524 23:15:34.402"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.411" starttime="20170524 23:15:34.404"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.413" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.413" starttime="20170524 23:15:34.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.414" starttime="20170524 23:15:34.413"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.415" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.415" starttime="20170524 23:15:34.414"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.417" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.417" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.417" starttime="20170524 23:15:34.416"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.424" starttime="20170524 23:15:34.417"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.425" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.428" starttime="20170524 23:15:34.424"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.430" level="INFO">${response_body} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.430" starttime="20170524 23:15:34.428"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.432" starttime="20170524 23:15:34.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.434" starttime="20170524 23:15:34.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.435" starttime="20170524 23:15:34.434"></status>
</kw>
<msg timestamp="20170524 23:15:34.436" level="INFO">${number_of_bedrooms} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.436" starttime="20170524 23:15:34.416"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.437" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.437" starttime="20170524 23:15:34.436"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.440" level="INFO">${json_id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.440" starttime="20170524 23:15:34.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.441" starttime="20170524 23:15:34.441"></status>
</kw>
<msg timestamp="20170524 23:15:34.442" level="INFO">${bedroomId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.442" starttime="20170524 23:15:34.402"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.443" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/65</msg>
<status status="PASS" endtime="20170524 23:15:34.443" starttime="20170524 23:15:34.442"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.449" starttime="20170524 23:15:34.444"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.450" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.451" starttime="20170524 23:15:34.450"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.451" level="INFO">${bedroom_body} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":991,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.452" starttime="20170524 23:15:34.451"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.453" starttime="20170524 23:15:34.452"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.454" starttime="20170524 23:15:34.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.455" starttime="20170524 23:15:34.454"></status>
</kw>
<msg timestamp="20170524 23:15:34.455" level="INFO">${bedroomBody} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":991,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.455" starttime="20170524 23:15:34.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"testing bedroomBody"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.456" starttime="20170524 23:15:34.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroomBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.457" starttime="20170524 23:15:34.457"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroomBody}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${bedroomId}</var>
</assign>
<msg timestamp="20170524 23:15:34.458" level="INFO">${bedroomId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.458" starttime="20170524 23:15:34.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroomId}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.459" starttime="20170524 23:15:34.459"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>123456789</arg>
</arguments>
<assign>
<var>${priceDaily_number_first}</var>
</assign>
<msg timestamp="20170524 23:15:34.460" level="INFO">${priceDaily_number_first} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.460" starttime="20170524 23:15:34.460"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily_number_last}</var>
</assign>
<msg timestamp="20170524 23:15:34.461" level="INFO">${priceDaily_number_last} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.462" starttime="20170524 23:15:34.461"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${priceDaily_number_first}</arg>
<arg>${priceDaily_number_last}</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 23:15:34.463" level="INFO">${priceDaily} = 451</msg>
<status status="PASS" endtime="20170524 23:15:34.463" starttime="20170524 23:15:34.462"></status>
</kw>
<kw name="Update Bedroom Data Price" library="bedroom_operations">
<arguments>
<arg>${bedroomBody}</arg>
<arg>${priceDaily}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 23:15:34.465" level="INFO">${id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.465" starttime="20170524 23:15:34.464"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/description</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 23:15:34.466" level="INFO">${description} = "TPNQYJOUJELDHGL"</msg>
<status status="PASS" endtime="20170524 23:15:34.466" starttime="20170524 23:15:34.465"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/floor</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 23:15:34.467" level="INFO">${floor} = 0</msg>
<status status="PASS" endtime="20170524 23:15:34.467" starttime="20170524 23:15:34.466"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/number</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 23:15:34.468" level="INFO">${number} = 5424</msg>
<status status="PASS" endtime="20170524 23:15:34.468" starttime="20170524 23:15:34.468"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${update_value}</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 23:15:34.469" level="INFO">${priceDaily} = 451</msg>
<status status="PASS" endtime="20170524 23:15:34.469" starttime="20170524 23:15:34.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${updated_price_suite}</arg>
<arg>${priceDaily}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.471" level="INFO">${updated_price_suite} = 451</msg>
<status status="PASS" endtime="20170524 23:15:34.472" starttime="20170524 23:15:34.470"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/bedroomStatusId/id</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 23:15:34.473" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 23:15:34.473" starttime="20170524 23:15:34.472"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/bedroomStatusId/code</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 23:15:34.474" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 23:15:34.474" starttime="20170524 23:15:34.473"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/bedroomStatusId/name</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.475" level="INFO">${statusName} = "\"BUSY\""</msg>
<status status="PASS" endtime="20170524 23:15:34.475" starttime="20170524 23:15:34.475"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/typeBedroomId/id</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 23:15:34.476" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 23:15:34.477" starttime="20170524 23:15:34.476"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bedroom}</arg>
<arg>/typeBedroomId/name</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.478" level="INFO">${typeName} = "\"TOP BED TWIN\""</msg>
<status status="PASS" endtime="20170524 23:15:34.478" starttime="20170524 23:15:34.477"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${description}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 23:15:34.479" level="INFO">${description} = TPNQYJOUJELDHGL</msg>
<status status="PASS" endtime="20170524 23:15:34.479" starttime="20170524 23:15:34.478"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${statusName}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.480" level="INFO">${statusName} = \BUSY\</msg>
<status status="PASS" endtime="20170524 23:15:34.480" starttime="20170524 23:15:34.480"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${typeName}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.481" level="INFO">${typeName} = \TOP BED TWIN\</msg>
<status status="PASS" endtime="20170524 23:15:34.481" starttime="20170524 23:15:34.481"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${statusName}</arg>
<arg>\\</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 23:15:34.482" level="INFO">${statusName} = BUSY</msg>
<status status="PASS" endtime="20170524 23:15:34.482" starttime="20170524 23:15:34.482"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${typeName}</arg>
<arg>\\</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 23:15:34.483" level="INFO">${typeName} = TOP BED TWIN</msg>
<status status="PASS" endtime="20170524 23:15:34.483" starttime="20170524 23:15:34.483"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 23:15:34.485" level="INFO">${dictionary_status} = {u'id': '2', u'code': '1', u'name': u'BUSY'}</msg>
<status status="PASS" endtime="20170524 23:15:34.485" starttime="20170524 23:15:34.484"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.486" level="INFO">${dictionary_id} = {u'id': '4', u'name': u'TOP BED TWIN'}</msg>
<status status="PASS" endtime="20170524 23:15:34.486" starttime="20170524 23:15:34.485"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 23:15:34.488" level="INFO">${dictionary} = {u'id': '65', u'description': u'TPNQYJOUJELDHGL', u'floor': '0', u'number': '5424', u'priceDaily': u'451', u'bedroomStatusId': {u'code': '1', u'id': '2', u'name': u'BUSY'}, u'typeBedroomId': {u'id': '...</msg>
<status status="PASS" endtime="20170524 23:15:34.488" starttime="20170524 23:15:34.487"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 23:15:34.489" level="INFO">${client_json} = {"id": "65", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "451", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "T...</msg>
<status status="PASS" endtime="20170524 23:15:34.489" starttime="20170524 23:15:34.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Updated json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.490" starttime="20170524 23:15:34.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.491" starttime="20170524 23:15:34.490"></status>
</kw>
<msg timestamp="20170524 23:15:34.491" level="INFO">${request_body} = {"id": "65", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "451", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "T...</msg>
<status status="PASS" endtime="20170524 23:15:34.492" starttime="20170524 23:15:34.463"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.492" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.493" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.493" starttime="20170524 23:15:34.492"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.494" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 23:15:34.494" starttime="20170524 23:15:34.493"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.495" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 23:15:34.495" starttime="20170524 23:15:34.495"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.496" level="INFO">Request body set to "{"id": "65", "description": "TPNQYJOUJELDHGL", "floor": "0", "number": "5424", "priceDaily": "451", "bedroomStatusId": {"id": "2", "code": "1", "name": "BUSY"}, "typeBedroomId": {"id": "4", "name": "TOP BED TWIN"}}".</msg>
<status status="PASS" endtime="20170524 23:15:34.496" starttime="20170524 23:15:34.496"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${put_update_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${put_update_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.498" level="INFO">${put_update_bedroom_endpoint} = /hotel-rest/webresources/bedroom/65</msg>
<status status="PASS" endtime="20170524 23:15:34.498" starttime="20170524 23:15:34.497"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${put_update_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.511" starttime="20170524 23:15:34.498"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.512" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 23:15:34.512" starttime="20170524 23:15:34.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.514" starttime="20170524 23:15:34.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.515" starttime="20170524 23:15:34.514"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${updatedBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.518" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.518" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.519" starttime="20170524 23:15:34.518"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.531" starttime="20170524 23:15:34.519"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.533" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.533" starttime="20170524 23:15:34.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.534" starttime="20170524 23:15:34.533"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 23:15:34.536" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 23:15:34.536" starttime="20170524 23:15:34.535"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 23:15:34.539" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 23:15:34.539" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 23:15:34.540" starttime="20170524 23:15:34.538"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.548" starttime="20170524 23:15:34.540"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.549" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.549" starttime="20170524 23:15:34.549"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.550" level="INFO">${response_body} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.550" starttime="20170524 23:15:34.550"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.551" starttime="20170524 23:15:34.551"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.552" starttime="20170524 23:15:34.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.553" starttime="20170524 23:15:34.552"></status>
</kw>
<msg timestamp="20170524 23:15:34.554" level="INFO">${number_of_bedrooms} = 51</msg>
<status status="PASS" endtime="20170524 23:15:34.554" starttime="20170524 23:15:34.537"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 23:15:34.555" level="INFO">${last_index} = 50</msg>
<status status="PASS" endtime="20170524 23:15:34.555" starttime="20170524 23:15:34.554"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 23:15:34.557" level="INFO">${json_id} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.557" starttime="20170524 23:15:34.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.558" starttime="20170524 23:15:34.557"></status>
</kw>
<msg timestamp="20170524 23:15:34.558" level="INFO">${bedroomId} = 65</msg>
<status status="PASS" endtime="20170524 23:15:34.559" starttime="20170524 23:15:34.517"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 23:15:34.560" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/65</msg>
<status status="PASS" endtime="20170524 23:15:34.560" starttime="20170524 23:15:34.559"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.564" starttime="20170524 23:15:34.560"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 23:15:34.565" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 23:15:34.565" starttime="20170524 23:15:34.564"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 23:15:34.566" level="INFO">${bedroom_body} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":451,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.566" starttime="20170524 23:15:34.566"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.567" starttime="20170524 23:15:34.567"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.568" starttime="20170524 23:15:34.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.569" starttime="20170524 23:15:34.569"></status>
</kw>
<msg timestamp="20170524 23:15:34.569" level="INFO">${updatedBedroom} = {"id":65,"description":"TPNQYJOUJELDHGL","floor":0,"number":5424,"priceDaily":451,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 23:15:34.570" starttime="20170524 23:15:34.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${updatedBedroom}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.571" starttime="20170524 23:15:34.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${updated_price_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.572" starttime="20170524 23:15:34.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${updatedBedroom}</arg>
<arg>${updated_price_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 23:15:34.573" starttime="20170524 23:15:34.572"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.573" starttime="20170524 23:15:34.401"></status>
</kw>
<status status="PASS" endtime="20170524 23:15:34.573" critical="yes" starttime="20170524 23:15:34.301"></status>
</test>
<status status="PASS" endtime="20170524 23:15:34.575" starttime="20170524 23:15:32.943"></status>
</suite>
<status status="PASS" endtime="20170524 23:15:34.578" starttime="20170524 23:15:32.940"></status>
</suite>
<status status="PASS" endtime="20170524 23:15:34.580" starttime="20170524 23:15:32.910"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project Ci Ivanaz Carinae" pass="10">Project Ci Ivanaz Carinae</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="10">Project Ci Ivanaz Carinae.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="Test Suite" pass="10">Project Ci Ivanaz Carinae.Robotframework-Backend.Test Suite</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170524 23:15:33.063" level="WARN">Imported resource file '/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend/reservation_operations.robot' is empty.</msg>
</errors>
</robot>
