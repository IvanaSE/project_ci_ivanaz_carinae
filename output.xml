<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170524 21:57:33.989" generator="Robot 3.0.2 (Python 2.7.6 on linux2)">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae" id="s1" name="Project Ci Ivanaz Carinae">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend/test_suite.robot" id="s1-s1-s1" name="Test Suite">
<test id="s1-s1-s1-t1" name="Test1 - Create Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:34.216" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:34.216" starttime="20170524 21:57:34.215"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 21:57:34.217" level="INFO">${name} = eaowllubhy</msg>
<status status="PASS" endtime="20170524 21:57:34.217" starttime="20170524 21:57:34.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.220" level="INFO">${name_suite} = eaowllubhy</msg>
<status status="PASS" endtime="20170524 21:57:34.221" starttime="20170524 21:57:34.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 21:57:34.222" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 21:57:34.222" starttime="20170524 21:57:34.221"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.223" level="INFO">${email} = eaowllubhy@email.com</msg>
<status status="PASS" endtime="20170524 21:57:34.223" starttime="20170524 21:57:34.222"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.224" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170524 21:57:34.224" starttime="20170524 21:57:34.224"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.225" level="INFO">${socialSecurityNumber} = 628265882</msg>
<status status="PASS" endtime="20170524 21:57:34.225" starttime="20170524 21:57:34.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:34.227" level="INFO">${dictionary} = {u'id': u'100', u'name': u'eaowllubhy', u'createDate': u'1451602800000', u'email': u'eaowllubhy@email.com', u'gender': u'F', u'socialSecurityNumber': u'628265882'}</msg>
<status status="PASS" endtime="20170524 21:57:34.227" starttime="20170524 21:57:34.226"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:34.228" level="INFO">${client_json} = {"id": "100", "name": "eaowllubhy", "createDate": "1451602800000", "email": "eaowllubhy@email.com", "gender": "F", "socialSecurityNumber": "628265882"}</msg>
<status status="PASS" endtime="20170524 21:57:34.229" starttime="20170524 21:57:34.228"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.230" starttime="20170524 21:57:34.229"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.231" starttime="20170524 21:57:34.230"></status>
</kw>
<msg timestamp="20170524 21:57:34.231" level="INFO">${request_body} = {"id": "100", "name": "eaowllubhy", "createDate": "1451602800000", "email": "eaowllubhy@email.com", "gender": "F", "socialSecurityNumber": "628265882"}</msg>
<status status="PASS" endtime="20170524 21:57:34.231" starttime="20170524 21:57:34.215"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.232" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.232" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.233" starttime="20170524 21:57:34.232"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.233" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:34.234" starttime="20170524 21:57:34.233"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.234" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:34.235" starttime="20170524 21:57:34.234"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.236" level="INFO">Request body set to "{"id": "100", "name": "eaowllubhy", "createDate": "1451602800000", "email": "eaowllubhy@email.com", "gender": "F", "socialSecurityNumber": "628265882"}".</msg>
<status status="PASS" endtime="20170524 21:57:34.236" starttime="20170524 21:57:34.235"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.258" starttime="20170524 21:57:34.236"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.259" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.259" starttime="20170524 21:57:34.258"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.260" starttime="20170524 21:57:34.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.261" starttime="20170524 21:57:34.260"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.263" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.264" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.264" starttime="20170524 21:57:34.263"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.278" starttime="20170524 21:57:34.264"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.280" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.280" starttime="20170524 21:57:34.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.282" starttime="20170524 21:57:34.281"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.284" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.285" starttime="20170524 21:57:34.283"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.292" starttime="20170524 21:57:34.285"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.293" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.294" starttime="20170524 21:57:34.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.295" starttime="20170524 21:57:34.294"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.296" level="INFO">${body_second_request} = 16</msg>
<status status="PASS" endtime="20170524 21:57:34.297" starttime="20170524 21:57:34.296"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.298" level="INFO">${last_index} = 15</msg>
<status status="PASS" endtime="20170524 21:57:34.298" starttime="20170524 21:57:34.297"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.300" level="INFO">${json_id} = 20</msg>
<status status="PASS" endtime="20170524 21:57:34.301" starttime="20170524 21:57:34.299"></status>
</kw>
<msg timestamp="20170524 21:57:34.301" level="INFO">${clientId} = 20</msg>
<status status="PASS" endtime="20170524 21:57:34.302" starttime="20170524 21:57:34.262"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.305" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/20</msg>
<status status="PASS" endtime="20170524 21:57:34.306" starttime="20170524 21:57:34.303"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.308" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.309" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.309" starttime="20170524 21:57:34.307"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.316" starttime="20170524 21:57:34.310"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.317" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.317" starttime="20170524 21:57:34.316"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.319" level="INFO">${client_body} = {"id":20,"name":"eaowllubhy","createDate":1451602800000,"email":"eaowllubhy@email.com","gender":"F","socialSecurityNumber":"628265882"}</msg>
<status status="PASS" endtime="20170524 21:57:34.319" starttime="20170524 21:57:34.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.320" starttime="20170524 21:57:34.319"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.322" starttime="20170524 21:57:34.321"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.323" starttime="20170524 21:57:34.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.324" starttime="20170524 21:57:34.324"></status>
</kw>
<msg timestamp="20170524 21:57:34.325" level="INFO">${newClient} = {"id":20,"name":"eaowllubhy","createDate":1451602800000,"email":"eaowllubhy@email.com","gender":"F","socialSecurityNumber":"628265882"}</msg>
<status status="PASS" endtime="20170524 21:57:34.325" starttime="20170524 21:57:34.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.326" starttime="20170524 21:57:34.326"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.327" starttime="20170524 21:57:34.214"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.327" critical="yes" starttime="20170524 21:57:34.213"></status>
</test>
<test id="s1-s1-s1-t2" name="Test2 - Get Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:34.330" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:34.330" starttime="20170524 21:57:34.329"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 21:57:34.331" level="INFO">${name} = oeajmklwgs</msg>
<status status="PASS" endtime="20170524 21:57:34.331" starttime="20170524 21:57:34.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.332" level="INFO">${name_suite} = oeajmklwgs</msg>
<status status="PASS" endtime="20170524 21:57:34.333" starttime="20170524 21:57:34.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 21:57:34.334" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 21:57:34.334" starttime="20170524 21:57:34.333"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.335" level="INFO">${email} = oeajmklwgs@email.com</msg>
<status status="PASS" endtime="20170524 21:57:34.335" starttime="20170524 21:57:34.334"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.336" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170524 21:57:34.336" starttime="20170524 21:57:34.335"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.337" level="INFO">${socialSecurityNumber} = 663669172</msg>
<status status="PASS" endtime="20170524 21:57:34.337" starttime="20170524 21:57:34.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:34.339" level="INFO">${dictionary} = {u'id': u'100', u'name': u'oeajmklwgs', u'createDate': u'1451602800000', u'email': u'oeajmklwgs@email.com', u'gender': u'F', u'socialSecurityNumber': u'663669172'}</msg>
<status status="PASS" endtime="20170524 21:57:34.339" starttime="20170524 21:57:34.337"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:34.341" level="INFO">${client_json} = {"id": "100", "name": "oeajmklwgs", "createDate": "1451602800000", "email": "oeajmklwgs@email.com", "gender": "F", "socialSecurityNumber": "663669172"}</msg>
<status status="PASS" endtime="20170524 21:57:34.341" starttime="20170524 21:57:34.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.343" starttime="20170524 21:57:34.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.345" starttime="20170524 21:57:34.344"></status>
</kw>
<msg timestamp="20170524 21:57:34.346" level="INFO">${request_body} = {"id": "100", "name": "oeajmklwgs", "createDate": "1451602800000", "email": "oeajmklwgs@email.com", "gender": "F", "socialSecurityNumber": "663669172"}</msg>
<status status="PASS" endtime="20170524 21:57:34.346" starttime="20170524 21:57:34.329"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.348" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.348" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.348" starttime="20170524 21:57:34.346"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.350" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:34.350" starttime="20170524 21:57:34.349"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.351" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:34.351" starttime="20170524 21:57:34.351"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.352" level="INFO">Request body set to "{"id": "100", "name": "oeajmklwgs", "createDate": "1451602800000", "email": "oeajmklwgs@email.com", "gender": "F", "socialSecurityNumber": "663669172"}".</msg>
<status status="PASS" endtime="20170524 21:57:34.352" starttime="20170524 21:57:34.352"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.382" starttime="20170524 21:57:34.353"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.383" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.384" starttime="20170524 21:57:34.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.385" starttime="20170524 21:57:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.385" starttime="20170524 21:57:34.385"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.387" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.388" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.388" starttime="20170524 21:57:34.387"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.400" starttime="20170524 21:57:34.388"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.402" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.402" starttime="20170524 21:57:34.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.408" starttime="20170524 21:57:34.403"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.410" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.411" starttime="20170524 21:57:34.409"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.418" starttime="20170524 21:57:34.412"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.419" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.419" starttime="20170524 21:57:34.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.420" starttime="20170524 21:57:34.419"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.421" level="INFO">${body_second_request} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.422" starttime="20170524 21:57:34.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.423" level="INFO">${last_index} = 16</msg>
<status status="PASS" endtime="20170524 21:57:34.423" starttime="20170524 21:57:34.422"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.424" level="INFO">${json_id} = 21</msg>
<status status="PASS" endtime="20170524 21:57:34.425" starttime="20170524 21:57:34.423"></status>
</kw>
<msg timestamp="20170524 21:57:34.425" level="INFO">${clientId} = 21</msg>
<status status="PASS" endtime="20170524 21:57:34.425" starttime="20170524 21:57:34.386"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.426" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/21</msg>
<status status="PASS" endtime="20170524 21:57:34.426" starttime="20170524 21:57:34.426"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.428" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.428" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.428" starttime="20170524 21:57:34.427"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.434" starttime="20170524 21:57:34.428"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.435" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.435" starttime="20170524 21:57:34.434"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.436" level="INFO">${client_body} = {"id":21,"name":"oeajmklwgs","createDate":1451602800000,"email":"oeajmklwgs@email.com","gender":"F","socialSecurityNumber":"663669172"}</msg>
<status status="PASS" endtime="20170524 21:57:34.436" starttime="20170524 21:57:34.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.437" starttime="20170524 21:57:34.436"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.438" starttime="20170524 21:57:34.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.439" starttime="20170524 21:57:34.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.440" starttime="20170524 21:57:34.440"></status>
</kw>
<msg timestamp="20170524 21:57:34.441" level="INFO">${newClient} = {"id":21,"name":"oeajmklwgs","createDate":1451602800000,"email":"oeajmklwgs@email.com","gender":"F","socialSecurityNumber":"663669172"}</msg>
<status status="PASS" endtime="20170524 21:57:34.441" starttime="20170524 21:57:34.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.442" starttime="20170524 21:57:34.441"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.442" starttime="20170524 21:57:34.328"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.444" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.444" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.445" starttime="20170524 21:57:34.444"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.454" starttime="20170524 21:57:34.445"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.455" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.455" starttime="20170524 21:57:34.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.456" starttime="20170524 21:57:34.455"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.458" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.458" starttime="20170524 21:57:34.457"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.464" starttime="20170524 21:57:34.459"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.465" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.465" starttime="20170524 21:57:34.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.467" starttime="20170524 21:57:34.466"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.468" level="INFO">${body_second_request} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.468" starttime="20170524 21:57:34.467"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.470" level="INFO">${last_index} = 16</msg>
<status status="PASS" endtime="20170524 21:57:34.470" starttime="20170524 21:57:34.468"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.471" level="INFO">${json_id} = 21</msg>
<status status="PASS" endtime="20170524 21:57:34.471" starttime="20170524 21:57:34.470"></status>
</kw>
<msg timestamp="20170524 21:57:34.472" level="INFO">${clientId} = 21</msg>
<status status="PASS" endtime="20170524 21:57:34.472" starttime="20170524 21:57:34.443"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.473" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/21</msg>
<status status="PASS" endtime="20170524 21:57:34.474" starttime="20170524 21:57:34.473"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.475" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.475" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.475" starttime="20170524 21:57:34.474"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.480" starttime="20170524 21:57:34.475"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.481" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.482" starttime="20170524 21:57:34.481"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.482" level="INFO">${client_body} = {"id":21,"name":"oeajmklwgs","createDate":1451602800000,"email":"oeajmklwgs@email.com","gender":"F","socialSecurityNumber":"663669172"}</msg>
<status status="PASS" endtime="20170524 21:57:34.483" starttime="20170524 21:57:34.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.484" starttime="20170524 21:57:34.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.484" starttime="20170524 21:57:34.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.486" starttime="20170524 21:57:34.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.487" starttime="20170524 21:57:34.486"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.487" starttime="20170524 21:57:34.443"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.487" critical="yes" starttime="20170524 21:57:34.328"></status>
</test>
<test id="s1-s1-s1-t3" name="Test3 - Get Total Number of Clients">
<kw name="Get Total Number of Clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.490" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.490" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.490" starttime="20170524 21:57:34.489"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.496" starttime="20170524 21:57:34.491"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.498" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.498" starttime="20170524 21:57:34.497"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.499" level="INFO">${response_body} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.499" starttime="20170524 21:57:34.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.500" starttime="20170524 21:57:34.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.501" starttime="20170524 21:57:34.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.502" starttime="20170524 21:57:34.501"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.502" starttime="20170524 21:57:34.489"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.503" critical="yes" starttime="20170524 21:57:34.488"></status>
</test>
<test id="s1-s1-s1-t4" name="Test4 - Get All Clients">
<kw name="Get All Clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.505" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.505" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.505" starttime="20170524 21:57:34.504"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.521" starttime="20170524 21:57:34.506"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.522" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.522" starttime="20170524 21:57:34.521"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.524" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.524" starttime="20170524 21:57:34.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.525" starttime="20170524 21:57:34.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.526" starttime="20170524 21:57:34.525"></status>
</kw>
<kw name="Parse Json" library="HttpLibrary.HTTP">
<doc>Parses the JSON document `json_string` and returns a data structure.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<assign>
<var>${parsed}</var>
</assign>
<msg timestamp="20170524 21:57:34.528" level="INFO">${parsed} = [{u'name': u'JO\xc3O PAULO', u'gender': u'M', u'createDate': 1451602800000, u'id': 1, u'socialSecurityNumber': u'14190842', u'email': u'JP.ALENCAR@HOTMAIL.COM'}, {u'name': u'THALLYS', u'gender': u'F',...</msg>
<status status="PASS" endtime="20170524 21:57:34.528" starttime="20170524 21:57:34.527"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${parsed}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20170524 21:57:34.529" level="INFO">Length is 17</msg>
<msg timestamp="20170524 21:57:34.529" level="INFO">${length} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.530" starttime="20170524 21:57:34.529"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${length}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20170524 21:57:34.532" level="INFO">${length} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.533" starttime="20170524 21:57:34.530"></status>
</kw>
<kw name="Get Total Number of Clients" library="client_operations">
<assign>
<var>${count}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.536" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.536" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.536" starttime="20170524 21:57:34.535"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.543" starttime="20170524 21:57:34.537"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.544" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.544" starttime="20170524 21:57:34.544"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.545" level="INFO">${response_body} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.545" starttime="20170524 21:57:34.545"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.546" starttime="20170524 21:57:34.546"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.547" starttime="20170524 21:57:34.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.548" starttime="20170524 21:57:34.548"></status>
</kw>
<msg timestamp="20170524 21:57:34.548" level="INFO">${count} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.549" starttime="20170524 21:57:34.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${count}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.549" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'str'&gt;</msg>
<status status="PASS" endtime="20170524 21:57:34.549" starttime="20170524 21:57:34.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.550" starttime="20170524 21:57:34.550"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.551" starttime="20170524 21:57:34.504"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.551" critical="yes" starttime="20170524 21:57:34.503"></status>
</test>
<test id="s1-s1-s1-t5" name="Test5 - Update Client Name">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:34.554" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:34.554" starttime="20170524 21:57:34.554"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 21:57:34.556" level="INFO">${name} = jcqlzsgaql</msg>
<status status="PASS" endtime="20170524 21:57:34.556" starttime="20170524 21:57:34.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.557" level="INFO">${name_suite} = jcqlzsgaql</msg>
<status status="PASS" endtime="20170524 21:57:34.557" starttime="20170524 21:57:34.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 21:57:34.558" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 21:57:34.558" starttime="20170524 21:57:34.557"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.559" level="INFO">${email} = jcqlzsgaql@email.com</msg>
<status status="PASS" endtime="20170524 21:57:34.559" starttime="20170524 21:57:34.558"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.560" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170524 21:57:34.560" starttime="20170524 21:57:34.559"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.561" level="INFO">${socialSecurityNumber} = 969966597</msg>
<status status="PASS" endtime="20170524 21:57:34.561" starttime="20170524 21:57:34.560"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:34.562" level="INFO">${dictionary} = {u'id': u'100', u'name': u'jcqlzsgaql', u'createDate': u'1451602800000', u'email': u'jcqlzsgaql@email.com', u'gender': u'F', u'socialSecurityNumber': u'969966597'}</msg>
<status status="PASS" endtime="20170524 21:57:34.562" starttime="20170524 21:57:34.561"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:34.563" level="INFO">${client_json} = {"id": "100", "name": "jcqlzsgaql", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.564" starttime="20170524 21:57:34.563"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.564" starttime="20170524 21:57:34.564"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.565" starttime="20170524 21:57:34.565"></status>
</kw>
<msg timestamp="20170524 21:57:34.565" level="INFO">${request_body} = {"id": "100", "name": "jcqlzsgaql", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.566" starttime="20170524 21:57:34.553"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.566" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.566" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.567" starttime="20170524 21:57:34.566"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.568" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:34.568" starttime="20170524 21:57:34.567"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.569" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:34.570" starttime="20170524 21:57:34.569"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.572" level="INFO">Request body set to "{"id": "100", "name": "jcqlzsgaql", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}".</msg>
<status status="PASS" endtime="20170524 21:57:34.572" starttime="20170524 21:57:34.571"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.586" starttime="20170524 21:57:34.572"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.587" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.588" starttime="20170524 21:57:34.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.589" starttime="20170524 21:57:34.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.591" starttime="20170524 21:57:34.590"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.595" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.595" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.596" starttime="20170524 21:57:34.594"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.608" starttime="20170524 21:57:34.596"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.610" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.610" starttime="20170524 21:57:34.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.612" starttime="20170524 21:57:34.611"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.615" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.615" starttime="20170524 21:57:34.612"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.623" starttime="20170524 21:57:34.616"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.624" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.624" starttime="20170524 21:57:34.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.625" starttime="20170524 21:57:34.625"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.626" level="INFO">${body_second_request} = 18</msg>
<status status="PASS" endtime="20170524 21:57:34.626" starttime="20170524 21:57:34.626"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.628" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.628" starttime="20170524 21:57:34.627"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.629" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.629" starttime="20170524 21:57:34.628"></status>
</kw>
<msg timestamp="20170524 21:57:34.630" level="INFO">${clientId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.630" starttime="20170524 21:57:34.592"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.631" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/22</msg>
<status status="PASS" endtime="20170524 21:57:34.631" starttime="20170524 21:57:34.630"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.632" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.632" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.632" starttime="20170524 21:57:34.632"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.637" starttime="20170524 21:57:34.633"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.639" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.639" starttime="20170524 21:57:34.638"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.640" level="INFO">${client_body} = {"id":22,"name":"jcqlzsgaql","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.640" starttime="20170524 21:57:34.639"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.641" starttime="20170524 21:57:34.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.642" starttime="20170524 21:57:34.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.643" starttime="20170524 21:57:34.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.644" starttime="20170524 21:57:34.643"></status>
</kw>
<msg timestamp="20170524 21:57:34.644" level="INFO">${newClient} = {"id":22,"name":"jcqlzsgaql","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.644" starttime="20170524 21:57:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.645" starttime="20170524 21:57:34.645"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.646" starttime="20170524 21:57:34.553"></status>
</kw>
<kw name="Update Client Name" library="client_operations">
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${clientBody}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.649" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.649" starttime="20170524 21:57:34.648"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.658" starttime="20170524 21:57:34.649"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.659" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.659" starttime="20170524 21:57:34.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.660" starttime="20170524 21:57:34.659"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.661" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.661" starttime="20170524 21:57:34.660"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.668" starttime="20170524 21:57:34.662"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.669" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.669" starttime="20170524 21:57:34.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.671" starttime="20170524 21:57:34.670"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.672" level="INFO">${body_second_request} = 18</msg>
<status status="PASS" endtime="20170524 21:57:34.673" starttime="20170524 21:57:34.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.674" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.674" starttime="20170524 21:57:34.673"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.675" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.675" starttime="20170524 21:57:34.674"></status>
</kw>
<msg timestamp="20170524 21:57:34.676" level="INFO">${clientId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.676" starttime="20170524 21:57:34.648"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.677" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/22</msg>
<status status="PASS" endtime="20170524 21:57:34.677" starttime="20170524 21:57:34.676"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.678" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.679" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.679" starttime="20170524 21:57:34.678"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.684" starttime="20170524 21:57:34.679"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.685" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.685" starttime="20170524 21:57:34.684"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.686" level="INFO">${client_body} = {"id":22,"name":"jcqlzsgaql","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.686" starttime="20170524 21:57:34.685"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.687" starttime="20170524 21:57:34.687"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.688" starttime="20170524 21:57:34.688"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.689" starttime="20170524 21:57:34.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.690" starttime="20170524 21:57:34.690"></status>
</kw>
<msg timestamp="20170524 21:57:34.691" level="INFO">${clientBody} = {"id":22,"name":"jcqlzsgaql","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.691" starttime="20170524 21:57:34.647"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${clientBody}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${clientId}</var>
</assign>
<msg timestamp="20170524 21:57:34.692" level="INFO">${clientId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.692" starttime="20170524 21:57:34.691"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${newName}</var>
</assign>
<msg timestamp="20170524 21:57:34.693" level="INFO">${newName} = nnawkdmlnr</msg>
<status status="PASS" endtime="20170524 21:57:34.693" starttime="20170524 21:57:34.692"></status>
</kw>
<kw name="Update Client Data Name" library="client_operations">
<arguments>
<arg>${clientBody}</arg>
<arg>${newName}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/id</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:34.697" level="INFO">${id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.698" starttime="20170524 21:57:34.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${update_value}</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 21:57:34.700" level="INFO">${name} = nnawkdmlnr</msg>
<status status="PASS" endtime="20170524 21:57:34.700" starttime="20170524 21:57:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${updated_name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.705" level="INFO">${updated_name_suite} = nnawkdmlnr</msg>
<status status="PASS" endtime="20170524 21:57:34.705" starttime="20170524 21:57:34.701"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/createDate</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 21:57:34.707" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 21:57:34.707" starttime="20170524 21:57:34.706"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/email</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.709" level="INFO">${email} = "jcqlzsgaql@email.com"</msg>
<status status="PASS" endtime="20170524 21:57:34.709" starttime="20170524 21:57:34.708"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/gender</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.711" level="INFO">${gender} = "F"</msg>
<status status="PASS" endtime="20170524 21:57:34.711" starttime="20170524 21:57:34.710"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${client}</arg>
<arg>/socialSecurityNumber</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.713" level="INFO">${socialSecurityNumber} = "969966597"</msg>
<status status="PASS" endtime="20170524 21:57:34.713" starttime="20170524 21:57:34.712"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${email}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.715" level="INFO">${email} = jcqlzsgaql@email.com</msg>
<status status="PASS" endtime="20170524 21:57:34.715" starttime="20170524 21:57:34.714"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${gender}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.718" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170524 21:57:34.719" starttime="20170524 21:57:34.716"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${socialSecurityNumber}</arg>
<arg>\"</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.722" level="INFO">${socialSecurityNumber} = 969966597</msg>
<status status="PASS" endtime="20170524 21:57:34.722" starttime="20170524 21:57:34.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:34.724" level="INFO">${dictionary} = {u'id': '22', u'name': u'nnawkdmlnr', u'createDate': '1451602800000', u'email': u'jcqlzsgaql@email.com', u'gender': u'F', u'socialSecurityNumber': u'969966597'}</msg>
<status status="PASS" endtime="20170524 21:57:34.724" starttime="20170524 21:57:34.723"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:34.726" level="INFO">${client_json} = {"id": "22", "name": "nnawkdmlnr", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.726" starttime="20170524 21:57:34.725"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Updated json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.727" starttime="20170524 21:57:34.727"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.729" starttime="20170524 21:57:34.728"></status>
</kw>
<msg timestamp="20170524 21:57:34.729" level="INFO">${request_body} = {"id": "22", "name": "nnawkdmlnr", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.730" starttime="20170524 21:57:34.694"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.731" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.731" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.732" starttime="20170524 21:57:34.730"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.734" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:34.734" starttime="20170524 21:57:34.733"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.735" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:34.736" starttime="20170524 21:57:34.735"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.737" level="INFO">Request body set to "{"id": "22", "name": "nnawkdmlnr", "createDate": "1451602800000", "email": "jcqlzsgaql@email.com", "gender": "F", "socialSecurityNumber": "969966597"}".</msg>
<status status="PASS" endtime="20170524 21:57:34.737" starttime="20170524 21:57:34.736"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${put_update_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${put_update_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.738" level="INFO">${put_update_client_endpoint} = /hotel-rest/webresources/client/22</msg>
<status status="PASS" endtime="20170524 21:57:34.738" starttime="20170524 21:57:34.737"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${put_update_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.752" starttime="20170524 21:57:34.739"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.753" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.754" starttime="20170524 21:57:34.753"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.755" starttime="20170524 21:57:34.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.758" starttime="20170524 21:57:34.756"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${updatedClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.761" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.761" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.762" starttime="20170524 21:57:34.760"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.773" starttime="20170524 21:57:34.762"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.776" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.776" starttime="20170524 21:57:34.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.778" starttime="20170524 21:57:34.777"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.781" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.781" starttime="20170524 21:57:34.778"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.789" starttime="20170524 21:57:34.781"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.790" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.791" starttime="20170524 21:57:34.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.792" starttime="20170524 21:57:34.791"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.794" level="INFO">${body_second_request} = 18</msg>
<status status="PASS" endtime="20170524 21:57:34.794" starttime="20170524 21:57:34.793"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.796" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:34.796" starttime="20170524 21:57:34.795"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.798" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.798" starttime="20170524 21:57:34.797"></status>
</kw>
<msg timestamp="20170524 21:57:34.799" level="INFO">${clientId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:34.799" starttime="20170524 21:57:34.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.801" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/22</msg>
<status status="PASS" endtime="20170524 21:57:34.802" starttime="20170524 21:57:34.800"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.804" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.804" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.805" starttime="20170524 21:57:34.802"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.814" starttime="20170524 21:57:34.806"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.816" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.816" starttime="20170524 21:57:34.815"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.818" level="INFO">${client_body} = {"id":22,"name":"nnawkdmlnr","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.818" starttime="20170524 21:57:34.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.819" starttime="20170524 21:57:34.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.821" starttime="20170524 21:57:34.820"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.822" starttime="20170524 21:57:34.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.824" starttime="20170524 21:57:34.823"></status>
</kw>
<msg timestamp="20170524 21:57:34.825" level="INFO">${updatedClient} = {"id":22,"name":"nnawkdmlnr","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:34.826" starttime="20170524 21:57:34.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${updatedClient}</arg>
<arg>${updated_name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.830" starttime="20170524 21:57:34.827"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.830" starttime="20170524 21:57:34.646"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.831" critical="yes" starttime="20170524 21:57:34.551"></status>
</test>
<test id="s1-s1-s1-t6" name="Test6 - Delete Client">
<kw name="Create New Client" library="client_operations">
<kw name="Create Client Data" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:34.835" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:34.835" starttime="20170524 21:57:34.834"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170524 21:57:34.837" level="INFO">${name} = cztohgqbjh</msg>
<status status="PASS" endtime="20170524 21:57:34.837" starttime="20170524 21:57:34.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${name_suite}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.839" level="INFO">${name_suite} = cztohgqbjh</msg>
<status status="PASS" endtime="20170524 21:57:34.839" starttime="20170524 21:57:34.838"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170524 21:57:34.840" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20170524 21:57:34.840" starttime="20170524 21:57:34.840"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170524 21:57:34.842" level="INFO">${email} = cztohgqbjh@email.com</msg>
<status status="PASS" endtime="20170524 21:57:34.842" starttime="20170524 21:57:34.841"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170524 21:57:34.843" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170524 21:57:34.844" starttime="20170524 21:57:34.843"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170524 21:57:34.845" level="INFO">${socialSecurityNumber} = 192545830</msg>
<status status="PASS" endtime="20170524 21:57:34.845" starttime="20170524 21:57:34.844"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:34.848" level="INFO">${dictionary} = {u'id': u'100', u'name': u'cztohgqbjh', u'createDate': u'1451602800000', u'email': u'cztohgqbjh@email.com', u'gender': u'M', u'socialSecurityNumber': u'192545830'}</msg>
<status status="PASS" endtime="20170524 21:57:34.848" starttime="20170524 21:57:34.846"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:34.849" level="INFO">${client_json} = {"id": "100", "name": "cztohgqbjh", "createDate": "1451602800000", "email": "cztohgqbjh@email.com", "gender": "M", "socialSecurityNumber": "192545830"}</msg>
<status status="PASS" endtime="20170524 21:57:34.850" starttime="20170524 21:57:34.848"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Created json data:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.851" starttime="20170524 21:57:34.850"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.852" starttime="20170524 21:57:34.852"></status>
</kw>
<msg timestamp="20170524 21:57:34.853" level="INFO">${request_body} = {"id": "100", "name": "cztohgqbjh", "createDate": "1451602800000", "email": "cztohgqbjh@email.com", "gender": "M", "socialSecurityNumber": "192545830"}</msg>
<status status="PASS" endtime="20170524 21:57:34.853" starttime="20170524 21:57:34.833"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.855" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.855" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.856" starttime="20170524 21:57:34.854"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.857" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:34.857" starttime="20170524 21:57:34.856"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.859" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:34.859" starttime="20170524 21:57:34.858"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.861" level="INFO">Request body set to "{"id": "100", "name": "cztohgqbjh", "createDate": "1451602800000", "email": "cztohgqbjh@email.com", "gender": "M", "socialSecurityNumber": "192545830"}".</msg>
<status status="PASS" endtime="20170524 21:57:34.861" starttime="20170524 21:57:34.860"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.876" starttime="20170524 21:57:34.862"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.877" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.877" starttime="20170524 21:57:34.877"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.879" starttime="20170524 21:57:34.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.882" starttime="20170524 21:57:34.880"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${newClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.884" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.884" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.885" starttime="20170524 21:57:34.884"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.897" starttime="20170524 21:57:34.885"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.900" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.901" starttime="20170524 21:57:34.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.902" starttime="20170524 21:57:34.901"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.903" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.904" starttime="20170524 21:57:34.902"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.910" starttime="20170524 21:57:34.904"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.911" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.911" starttime="20170524 21:57:34.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.913" starttime="20170524 21:57:34.912"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.914" level="INFO">${body_second_request} = 19</msg>
<status status="PASS" endtime="20170524 21:57:34.914" starttime="20170524 21:57:34.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.915" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170524 21:57:34.915" starttime="20170524 21:57:34.914"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.916" level="INFO">${json_id} = 23</msg>
<status status="PASS" endtime="20170524 21:57:34.917" starttime="20170524 21:57:34.916"></status>
</kw>
<msg timestamp="20170524 21:57:34.917" level="INFO">${clientId} = 23</msg>
<status status="PASS" endtime="20170524 21:57:34.917" starttime="20170524 21:57:34.883"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.918" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/23</msg>
<status status="PASS" endtime="20170524 21:57:34.919" starttime="20170524 21:57:34.918"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.919" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.920" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.920" starttime="20170524 21:57:34.919"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.925" starttime="20170524 21:57:34.920"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.927" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.927" starttime="20170524 21:57:34.926"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:34.928" level="INFO">${client_body} = {"id":23,"name":"cztohgqbjh","createDate":1451602800000,"email":"cztohgqbjh@email.com","gender":"M","socialSecurityNumber":"192545830"}</msg>
<status status="PASS" endtime="20170524 21:57:34.928" starttime="20170524 21:57:34.927"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.929" starttime="20170524 21:57:34.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.930" starttime="20170524 21:57:34.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.931" starttime="20170524 21:57:34.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.932" starttime="20170524 21:57:34.932"></status>
</kw>
<msg timestamp="20170524 21:57:34.932" level="INFO">${newClient} = {"id":23,"name":"cztohgqbjh","createDate":1451602800000,"email":"cztohgqbjh@email.com","gender":"M","socialSecurityNumber":"192545830"}</msg>
<status status="PASS" endtime="20170524 21:57:34.933" starttime="20170524 21:57:34.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.934" starttime="20170524 21:57:34.933"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:34.934" starttime="20170524 21:57:34.833"></status>
</kw>
<kw name="Delete Client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.936" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.936" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.936" starttime="20170524 21:57:34.935"></status>
</kw>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.937" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.938" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.938" starttime="20170524 21:57:34.937"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.947" starttime="20170524 21:57:34.938"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.949" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.949" starttime="20170524 21:57:34.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.950" starttime="20170524 21:57:34.950"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.952" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:34.952" starttime="20170524 21:57:34.951"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.959" starttime="20170524 21:57:34.953"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.960" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:34.960" starttime="20170524 21:57:34.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.961" starttime="20170524 21:57:34.960"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:34.962" level="INFO">${body_second_request} = 19</msg>
<status status="PASS" endtime="20170524 21:57:34.962" starttime="20170524 21:57:34.961"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:34.964" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170524 21:57:34.964" starttime="20170524 21:57:34.963"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:34.965" level="INFO">${json_id} = 23</msg>
<status status="PASS" endtime="20170524 21:57:34.965" starttime="20170524 21:57:34.964"></status>
</kw>
<msg timestamp="20170524 21:57:34.966" level="INFO">${clientId} = 23</msg>
<status status="PASS" endtime="20170524 21:57:34.966" starttime="20170524 21:57:34.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientId}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.967" starttime="20170524 21:57:34.966"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${delete_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${delete_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:34.968" level="INFO">${delete_client_endpoint} = /hotel-rest/webresources/client/23</msg>
<status status="PASS" endtime="20170524 21:57:34.968" starttime="20170524 21:57:34.967"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.983" starttime="20170524 21:57:34.968"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:34.984" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:34.984" starttime="20170524 21:57:34.983"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.986" starttime="20170524 21:57:34.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:34.987" starttime="20170524 21:57:34.987"></status>
</kw>
<kw name="Get Last Created Client" library="client_operations">
<assign>
<var>${lastClient}</var>
</assign>
<kw name="Get ID of The Last Client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:34.991" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:34.991" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:34.992" starttime="20170524 21:57:34.990"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.006" starttime="20170524 21:57:34.993"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.008" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.008" starttime="20170524 21:57:35.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.010" starttime="20170524 21:57:35.009"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.013" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170524 21:57:35.013" starttime="20170524 21:57:35.011"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.020" starttime="20170524 21:57:35.014"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.023" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.023" starttime="20170524 21:57:35.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.025" starttime="20170524 21:57:35.024"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.026" level="INFO">${body_second_request} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.027" starttime="20170524 21:57:35.026"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.028" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.029" starttime="20170524 21:57:35.027"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.031" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.031" starttime="20170524 21:57:35.029"></status>
</kw>
<msg timestamp="20170524 21:57:35.032" level="INFO">${clientId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.032" starttime="20170524 21:57:34.989"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_client_endpoint}</arg>
<arg>${clientId}</arg>
</arguments>
<assign>
<var>${get_client_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.034" level="INFO">${get_client_endpoint} = /hotel-rest/webresources/client/22</msg>
<status status="PASS" endtime="20170524 21:57:35.035" starttime="20170524 21:57:35.033"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.036" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.036" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.037" starttime="20170524 21:57:35.035"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.053" starttime="20170524 21:57:35.038"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.054" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.055" starttime="20170524 21:57:35.053"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${client_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.059" level="INFO">${client_body} = {"id":22,"name":"nnawkdmlnr","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:35.059" starttime="20170524 21:57:35.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.061" starttime="20170524 21:57:35.060"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Last created client:"</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.063" starttime="20170524 21:57:35.062"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${clientBody}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.066" starttime="20170524 21:57:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.069" starttime="20170524 21:57:35.068"></status>
</kw>
<msg timestamp="20170524 21:57:35.069" level="INFO">${lastClient} = {"id":22,"name":"nnawkdmlnr","createDate":1451602800000,"email":"jcqlzsgaql@email.com","gender":"F","socialSecurityNumber":"969966597"}</msg>
<status status="PASS" endtime="20170524 21:57:35.070" starttime="20170524 21:57:34.988"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${lastClient}</arg>
<arg>${name_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.071" starttime="20170524 21:57:35.071"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.072" starttime="20170524 21:57:34.934"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.075" critical="yes" starttime="20170524 21:57:34.832"></status>
</test>
<test id="s1-s1-s1-t7" name="Test7 - Create Bedroom Busy Top bed twin">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:35.080" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:35.080" starttime="20170524 21:57:35.079"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 21:57:35.082" level="INFO">${description} = ORBBQKDTFYETEXC</msg>
<status status="PASS" endtime="20170524 21:57:35.082" starttime="20170524 21:57:35.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.085" level="INFO">${room_description_suite} = ORBBQKDTFYETEXC</msg>
<status status="PASS" endtime="20170524 21:57:35.085" starttime="20170524 21:57:35.083"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 21:57:35.087" level="INFO">${floor} = 4</msg>
<status status="PASS" endtime="20170524 21:57:35.087" starttime="20170524 21:57:35.086"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 21:57:35.088" level="INFO">${number} = 6302</msg>
<status status="PASS" endtime="20170524 21:57:35.089" starttime="20170524 21:57:35.087"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 21:57:35.092" level="INFO">${priceDaily} = 757</msg>
<status status="PASS" endtime="20170524 21:57:35.092" starttime="20170524 21:57:35.091"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 21:57:35.094" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 21:57:35.094" starttime="20170524 21:57:35.093"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 21:57:35.095" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 21:57:35.096" starttime="20170524 21:57:35.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"BUSY"</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 21:57:35.097" level="INFO">${statusName} = "BUSY"</msg>
<status status="PASS" endtime="20170524 21:57:35.097" starttime="20170524 21:57:35.096"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 21:57:35.099" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 21:57:35.099" starttime="20170524 21:57:35.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"TOP BED TWIN"</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 21:57:35.100" level="INFO">${typeName} = "TOP BED TWIN"</msg>
<status status="PASS" endtime="20170524 21:57:35.100" starttime="20170524 21:57:35.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 21:57:35.103" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'"BUSY"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.103" starttime="20170524 21:57:35.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.105" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'"TOP BED TWIN"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.105" starttime="20170524 21:57:35.103"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:35.107" level="INFO">${dictionary} = {u'id': u'100', u'description': u'ORBBQKDTFYETEXC', u'floor': u'4', u'number': u'6302', u'priceDaily': u'757', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'"BUSY"'}, u'typeBedroomId': {...</msg>
<status status="PASS" endtime="20170524 21:57:35.108" starttime="20170524 21:57:35.106"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:35.109" level="INFO">${client_json} = {"id": "100", "description": "ORBBQKDTFYETEXC", "floor": "4", "number": "6302", "priceDaily": "757", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.109" starttime="20170524 21:57:35.108"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.111" starttime="20170524 21:57:35.110"></status>
</kw>
<msg timestamp="20170524 21:57:35.112" level="INFO">${request_body} = {"id": "100", "description": "ORBBQKDTFYETEXC", "floor": "4", "number": "6302", "priceDaily": "757", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.112" starttime="20170524 21:57:35.078"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.113" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.114" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.115" starttime="20170524 21:57:35.113"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.116" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:35.117" starttime="20170524 21:57:35.116"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.118" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:35.119" starttime="20170524 21:57:35.117"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.122" level="INFO">Request body set to "{"id": "100", "description": "ORBBQKDTFYETEXC", "floor": "4", "number": "6302", "priceDaily": "757", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name": "\"TOP BED TWIN\""}}".</msg>
<status status="PASS" endtime="20170524 21:57:35.123" starttime="20170524 21:57:35.121"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.137" starttime="20170524 21:57:35.123"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.138" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:35.138" starttime="20170524 21:57:35.137"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.139" starttime="20170524 21:57:35.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.140" starttime="20170524 21:57:35.140"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.142" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.143" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.143" starttime="20170524 21:57:35.142"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.152" starttime="20170524 21:57:35.144"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.153" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.153" starttime="20170524 21:57:35.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.154" starttime="20170524 21:57:35.153"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.156" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.156" starttime="20170524 21:57:35.155"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.159" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.159" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.160" starttime="20170524 21:57:35.158"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.169" starttime="20170524 21:57:35.161"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.170" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.170" starttime="20170524 21:57:35.170"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.171" level="INFO">${response_body} = 16</msg>
<status status="PASS" endtime="20170524 21:57:35.172" starttime="20170524 21:57:35.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.173" starttime="20170524 21:57:35.172"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.176" starttime="20170524 21:57:35.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.179" starttime="20170524 21:57:35.176"></status>
</kw>
<msg timestamp="20170524 21:57:35.180" level="INFO">${number_of_bedrooms} = 16</msg>
<status status="PASS" endtime="20170524 21:57:35.180" starttime="20170524 21:57:35.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.181" level="INFO">${last_index} = 15</msg>
<status status="PASS" endtime="20170524 21:57:35.182" starttime="20170524 21:57:35.180"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.183" level="INFO">${json_id} = 21</msg>
<status status="PASS" endtime="20170524 21:57:35.184" starttime="20170524 21:57:35.182"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.185" starttime="20170524 21:57:35.184"></status>
</kw>
<msg timestamp="20170524 21:57:35.186" level="INFO">${bedroomId} = 21</msg>
<status status="PASS" endtime="20170524 21:57:35.186" starttime="20170524 21:57:35.141"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.187" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/21</msg>
<status status="PASS" endtime="20170524 21:57:35.187" starttime="20170524 21:57:35.186"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.194" starttime="20170524 21:57:35.188"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.196" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.197" starttime="20170524 21:57:35.195"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.199" level="INFO">${bedroom_body} = {"id":21,"description":"ORBBQKDTFYETEXC","floor":4,"number":6302,"priceDaily":757,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.199" starttime="20170524 21:57:35.198"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.200" starttime="20170524 21:57:35.200"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.201" starttime="20170524 21:57:35.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.202" starttime="20170524 21:57:35.202"></status>
</kw>
<msg timestamp="20170524 21:57:35.203" level="INFO">${newBedroom} = {"id":21,"description":"ORBBQKDTFYETEXC","floor":4,"number":6302,"priceDaily":757,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.203" starttime="20170524 21:57:35.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.204" starttime="20170524 21:57:35.204"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.205" starttime="20170524 21:57:35.078"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.205" critical="yes" starttime="20170524 21:57:35.076"></status>
</test>
<test id="s1-s1-s1-t8" name="Test8 - Get Bedroom">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:35.210" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:35.210" starttime="20170524 21:57:35.209"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 21:57:35.211" level="INFO">${description} = ONETKLKNAXWIVKB</msg>
<status status="PASS" endtime="20170524 21:57:35.212" starttime="20170524 21:57:35.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.213" level="INFO">${room_description_suite} = ONETKLKNAXWIVKB</msg>
<status status="PASS" endtime="20170524 21:57:35.214" starttime="20170524 21:57:35.212"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 21:57:35.216" level="INFO">${floor} = 1</msg>
<status status="PASS" endtime="20170524 21:57:35.216" starttime="20170524 21:57:35.214"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 21:57:35.218" level="INFO">${number} = 5856</msg>
<status status="PASS" endtime="20170524 21:57:35.218" starttime="20170524 21:57:35.217"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 21:57:35.219" level="INFO">${priceDaily} = 541</msg>
<status status="PASS" endtime="20170524 21:57:35.219" starttime="20170524 21:57:35.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 21:57:35.221" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 21:57:35.222" starttime="20170524 21:57:35.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 21:57:35.223" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 21:57:35.224" starttime="20170524 21:57:35.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"BUSY"</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 21:57:35.224" level="INFO">${statusName} = "BUSY"</msg>
<status status="PASS" endtime="20170524 21:57:35.225" starttime="20170524 21:57:35.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 21:57:35.226" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 21:57:35.226" starttime="20170524 21:57:35.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"TOP BED TWIN"</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 21:57:35.227" level="INFO">${typeName} = "TOP BED TWIN"</msg>
<status status="PASS" endtime="20170524 21:57:35.227" starttime="20170524 21:57:35.226"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 21:57:35.228" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'"BUSY"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.228" starttime="20170524 21:57:35.227"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.229" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'"TOP BED TWIN"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.230" starttime="20170524 21:57:35.229"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:35.231" level="INFO">${dictionary} = {u'id': u'100', u'description': u'ONETKLKNAXWIVKB', u'floor': u'1', u'number': u'5856', u'priceDaily': u'541', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'"BUSY"'}, u'typeBedroomId': {...</msg>
<status status="PASS" endtime="20170524 21:57:35.232" starttime="20170524 21:57:35.230"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:35.233" level="INFO">${client_json} = {"id": "100", "description": "ONETKLKNAXWIVKB", "floor": "1", "number": "5856", "priceDaily": "541", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.233" starttime="20170524 21:57:35.232"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.234" starttime="20170524 21:57:35.233"></status>
</kw>
<msg timestamp="20170524 21:57:35.236" level="INFO">${request_body} = {"id": "100", "description": "ONETKLKNAXWIVKB", "floor": "1", "number": "5856", "priceDaily": "541", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.236" starttime="20170524 21:57:35.208"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.239" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.239" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.240" starttime="20170524 21:57:35.237"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.241" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:35.241" starttime="20170524 21:57:35.240"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.242" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:35.242" starttime="20170524 21:57:35.241"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.243" level="INFO">Request body set to "{"id": "100", "description": "ONETKLKNAXWIVKB", "floor": "1", "number": "5856", "priceDaily": "541", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name": "\"TOP BED TWIN\""}}".</msg>
<status status="PASS" endtime="20170524 21:57:35.243" starttime="20170524 21:57:35.243"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.257" starttime="20170524 21:57:35.244"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.259" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:35.259" starttime="20170524 21:57:35.258"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.261" starttime="20170524 21:57:35.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.263" starttime="20170524 21:57:35.262"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.267" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.268" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.268" starttime="20170524 21:57:35.266"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.281" starttime="20170524 21:57:35.269"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.283" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.283" starttime="20170524 21:57:35.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.284" starttime="20170524 21:57:35.284"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.285" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.286" starttime="20170524 21:57:35.285"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.288" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.288" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.288" starttime="20170524 21:57:35.287"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.296" starttime="20170524 21:57:35.289"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.297" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.297" starttime="20170524 21:57:35.296"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.298" level="INFO">${response_body} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.298" starttime="20170524 21:57:35.298"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.299" starttime="20170524 21:57:35.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.300" starttime="20170524 21:57:35.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.301" starttime="20170524 21:57:35.300"></status>
</kw>
<msg timestamp="20170524 21:57:35.301" level="INFO">${number_of_bedrooms} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.301" starttime="20170524 21:57:35.286"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.303" level="INFO">${last_index} = 16</msg>
<status status="PASS" endtime="20170524 21:57:35.303" starttime="20170524 21:57:35.302"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.304" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.304" starttime="20170524 21:57:35.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.305" starttime="20170524 21:57:35.305"></status>
</kw>
<msg timestamp="20170524 21:57:35.306" level="INFO">${bedroomId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.306" starttime="20170524 21:57:35.265"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.307" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/22</msg>
<status status="PASS" endtime="20170524 21:57:35.307" starttime="20170524 21:57:35.306"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.313" starttime="20170524 21:57:35.307"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.314" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.314" starttime="20170524 21:57:35.313"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.315" level="INFO">${bedroom_body} = {"id":22,"description":"ONETKLKNAXWIVKB","floor":1,"number":5856,"priceDaily":541,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.315" starttime="20170524 21:57:35.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.316" starttime="20170524 21:57:35.315"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.317" starttime="20170524 21:57:35.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.318" starttime="20170524 21:57:35.317"></status>
</kw>
<msg timestamp="20170524 21:57:35.318" level="INFO">${newBedroom} = {"id":22,"description":"ONETKLKNAXWIVKB","floor":1,"number":5856,"priceDaily":541,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.319" starttime="20170524 21:57:35.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.319" starttime="20170524 21:57:35.319"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.320" starttime="20170524 21:57:35.207"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.322" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.323" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.323" starttime="20170524 21:57:35.321"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.336" starttime="20170524 21:57:35.325"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.337" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.337" starttime="20170524 21:57:35.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.338" starttime="20170524 21:57:35.338"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.339" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.339" starttime="20170524 21:57:35.339"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.341" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.341" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.341" starttime="20170524 21:57:35.340"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.347" starttime="20170524 21:57:35.342"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.348" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.349" starttime="20170524 21:57:35.348"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.349" level="INFO">${response_body} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.350" starttime="20170524 21:57:35.349"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.351" starttime="20170524 21:57:35.350"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.352" starttime="20170524 21:57:35.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.353" starttime="20170524 21:57:35.352"></status>
</kw>
<msg timestamp="20170524 21:57:35.353" level="INFO">${number_of_bedrooms} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.353" starttime="20170524 21:57:35.340"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.354" level="INFO">${last_index} = 16</msg>
<status status="PASS" endtime="20170524 21:57:35.354" starttime="20170524 21:57:35.354"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.356" level="INFO">${json_id} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.356" starttime="20170524 21:57:35.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.357" starttime="20170524 21:57:35.356"></status>
</kw>
<msg timestamp="20170524 21:57:35.357" level="INFO">${bedroomId} = 22</msg>
<status status="PASS" endtime="20170524 21:57:35.358" starttime="20170524 21:57:35.321"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.359" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/22</msg>
<status status="PASS" endtime="20170524 21:57:35.359" starttime="20170524 21:57:35.358"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.368" starttime="20170524 21:57:35.359"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.369" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.369" starttime="20170524 21:57:35.368"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.370" level="INFO">${bedroom_body} = {"id":22,"description":"ONETKLKNAXWIVKB","floor":1,"number":5856,"priceDaily":541,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.370" starttime="20170524 21:57:35.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.372" starttime="20170524 21:57:35.371"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.373" starttime="20170524 21:57:35.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.375" starttime="20170524 21:57:35.374"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.376" starttime="20170524 21:57:35.320"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.377" critical="yes" starttime="20170524 21:57:35.206"></status>
</test>
<test id="s1-s1-s1-t9" name="Test9 - Get All Bedrooms">
<kw name="Get All Bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.384" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.384" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.384" starttime="20170524 21:57:35.383"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.393" starttime="20170524 21:57:35.384"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.395" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.395" starttime="20170524 21:57:35.394"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.397" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.397" starttime="20170524 21:57:35.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.399" starttime="20170524 21:57:35.398"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.400" starttime="20170524 21:57:35.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.402" starttime="20170524 21:57:35.401"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.403" starttime="20170524 21:57:35.382"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.404" critical="yes" starttime="20170524 21:57:35.380"></status>
</test>
<test id="s1-s1-s1-t10" name="Test10 - Update Bedroom">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:35.408" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:35.409" starttime="20170524 21:57:35.407"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 21:57:35.410" level="INFO">${description} = EOBRRUAFSUBXWBX</msg>
<status status="PASS" endtime="20170524 21:57:35.410" starttime="20170524 21:57:35.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.412" level="INFO">${room_description_suite} = EOBRRUAFSUBXWBX</msg>
<status status="PASS" endtime="20170524 21:57:35.412" starttime="20170524 21:57:35.411"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 21:57:35.414" level="INFO">${floor} = 5</msg>
<status status="PASS" endtime="20170524 21:57:35.415" starttime="20170524 21:57:35.413"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 21:57:35.416" level="INFO">${number} = 9043</msg>
<status status="PASS" endtime="20170524 21:57:35.416" starttime="20170524 21:57:35.415"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 21:57:35.417" level="INFO">${priceDaily} = 947</msg>
<status status="PASS" endtime="20170524 21:57:35.417" starttime="20170524 21:57:35.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 21:57:35.418" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 21:57:35.418" starttime="20170524 21:57:35.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 21:57:35.419" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 21:57:35.419" starttime="20170524 21:57:35.418"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"BUSY"</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 21:57:35.420" level="INFO">${statusName} = "BUSY"</msg>
<status status="PASS" endtime="20170524 21:57:35.420" starttime="20170524 21:57:35.419"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 21:57:35.421" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 21:57:35.421" starttime="20170524 21:57:35.420"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"TOP BED TWIN"</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 21:57:35.422" level="INFO">${typeName} = "TOP BED TWIN"</msg>
<status status="PASS" endtime="20170524 21:57:35.422" starttime="20170524 21:57:35.421"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 21:57:35.424" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'"BUSY"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.424" starttime="20170524 21:57:35.423"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.426" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'"TOP BED TWIN"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.426" starttime="20170524 21:57:35.425"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:35.431" level="INFO">${dictionary} = {u'id': u'100', u'description': u'EOBRRUAFSUBXWBX', u'floor': u'5', u'number': u'9043', u'priceDaily': u'947', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'"BUSY"'}, u'typeBedroomId': {...</msg>
<status status="PASS" endtime="20170524 21:57:35.432" starttime="20170524 21:57:35.427"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:35.433" level="INFO">${client_json} = {"id": "100", "description": "EOBRRUAFSUBXWBX", "floor": "5", "number": "9043", "priceDaily": "947", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.434" starttime="20170524 21:57:35.432"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.435" starttime="20170524 21:57:35.434"></status>
</kw>
<msg timestamp="20170524 21:57:35.436" level="INFO">${request_body} = {"id": "100", "description": "EOBRRUAFSUBXWBX", "floor": "5", "number": "9043", "priceDaily": "947", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.436" starttime="20170524 21:57:35.407"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.438" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.438" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.438" starttime="20170524 21:57:35.437"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.439" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:35.440" starttime="20170524 21:57:35.439"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.441" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:35.441" starttime="20170524 21:57:35.440"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.442" level="INFO">Request body set to "{"id": "100", "description": "EOBRRUAFSUBXWBX", "floor": "5", "number": "9043", "priceDaily": "947", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name": "\"TOP BED TWIN\""}}".</msg>
<status status="PASS" endtime="20170524 21:57:35.443" starttime="20170524 21:57:35.442"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.468" starttime="20170524 21:57:35.444"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.469" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:35.469" starttime="20170524 21:57:35.468"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.470" starttime="20170524 21:57:35.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.472" starttime="20170524 21:57:35.471"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.479" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.480" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.481" starttime="20170524 21:57:35.477"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.491" starttime="20170524 21:57:35.481"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.493" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.493" starttime="20170524 21:57:35.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.495" starttime="20170524 21:57:35.494"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.496" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.497" starttime="20170524 21:57:35.495"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.499" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.499" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.499" starttime="20170524 21:57:35.498"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.507" starttime="20170524 21:57:35.500"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.508" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.509" starttime="20170524 21:57:35.507"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.510" level="INFO">${response_body} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.510" starttime="20170524 21:57:35.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.512" starttime="20170524 21:57:35.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.514" starttime="20170524 21:57:35.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.515" starttime="20170524 21:57:35.515"></status>
</kw>
<msg timestamp="20170524 21:57:35.516" level="INFO">${number_of_bedrooms} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.516" starttime="20170524 21:57:35.497"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.518" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.518" starttime="20170524 21:57:35.517"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.519" level="INFO">${json_id} = 23</msg>
<status status="PASS" endtime="20170524 21:57:35.519" starttime="20170524 21:57:35.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.520" starttime="20170524 21:57:35.520"></status>
</kw>
<msg timestamp="20170524 21:57:35.520" level="INFO">${bedroomId} = 23</msg>
<status status="PASS" endtime="20170524 21:57:35.521" starttime="20170524 21:57:35.474"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.522" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/23</msg>
<status status="PASS" endtime="20170524 21:57:35.522" starttime="20170524 21:57:35.521"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.527" starttime="20170524 21:57:35.522"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.528" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.529" starttime="20170524 21:57:35.528"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.530" level="INFO">${bedroom_body} = {"id":23,"description":"EOBRRUAFSUBXWBX","floor":5,"number":9043,"priceDaily":947,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.530" starttime="20170524 21:57:35.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.531" starttime="20170524 21:57:35.530"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.532" starttime="20170524 21:57:35.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.532" starttime="20170524 21:57:35.532"></status>
</kw>
<msg timestamp="20170524 21:57:35.533" level="INFO">${newBedroom} = {"id":23,"description":"EOBRRUAFSUBXWBX","floor":5,"number":9043,"priceDaily":947,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.533" starttime="20170524 21:57:35.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.534" starttime="20170524 21:57:35.533"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.534" starttime="20170524 21:57:35.406"></status>
</kw>
<kw name="Update Bedroom Data Price" library="bedroom_operations">
<msg timestamp="20170524 21:57:35.536" level="FAIL">Keyword 'bedroom_operations.Update Bedroom Data Price' expected 2 arguments, got 0.</msg>
<status status="FAIL" endtime="20170524 21:57:35.536" starttime="20170524 21:57:35.535"></status>
</kw>
<status status="FAIL" endtime="20170524 21:57:35.538" critical="yes" starttime="20170524 21:57:35.404">Keyword 'bedroom_operations.Update Bedroom Data Price' expected 2 arguments, got 0.</status>
</test>
<test id="s1-s1-s1-t11" name="Test11 - Delete Bedroom">
<kw name="Create New Bedroom" library="bedroom_operations">
<kw name="Create Bedroom Data" library="bedroom_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170524 21:57:35.546" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170524 21:57:35.546" starttime="20170524 21:57:35.544"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>15</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170524 21:57:35.547" level="INFO">${description} = IJJRHWDGJJJDVCX</msg>
<status status="PASS" endtime="20170524 21:57:35.547" starttime="20170524 21:57:35.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${room_description_suite}</arg>
<arg>${description}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.548" level="INFO">${room_description_suite} = IJJRHWDGJJJDVCX</msg>
<status status="PASS" endtime="20170524 21:57:35.549" starttime="20170524 21:57:35.548"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170524 21:57:35.549" level="INFO">${floor} = 0</msg>
<status status="PASS" endtime="20170524 21:57:35.550" starttime="20170524 21:57:35.549"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170524 21:57:35.551" level="INFO">${number} = 4243</msg>
<status status="PASS" endtime="20170524 21:57:35.551" starttime="20170524 21:57:35.550"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170524 21:57:35.552" level="INFO">${priceDaily} = 295</msg>
<status status="PASS" endtime="20170524 21:57:35.552" starttime="20170524 21:57:35.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${statusId}</var>
</assign>
<msg timestamp="20170524 21:57:35.553" level="INFO">${statusId} = 2</msg>
<status status="PASS" endtime="20170524 21:57:35.553" starttime="20170524 21:57:35.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20170524 21:57:35.554" level="INFO">${statusCode} = 1</msg>
<status status="PASS" endtime="20170524 21:57:35.555" starttime="20170524 21:57:35.554"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"BUSY"</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170524 21:57:35.556" level="INFO">${statusName} = "BUSY"</msg>
<status status="PASS" endtime="20170524 21:57:35.557" starttime="20170524 21:57:35.555"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<assign>
<var>${typeId}</var>
</assign>
<msg timestamp="20170524 21:57:35.558" level="INFO">${typeId} = 4</msg>
<status status="PASS" endtime="20170524 21:57:35.559" starttime="20170524 21:57:35.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"TOP BED TWIN"</arg>
</arguments>
<assign>
<var>${typeName}</var>
</assign>
<msg timestamp="20170524 21:57:35.561" level="INFO">${typeName} = "TOP BED TWIN"</msg>
<status status="PASS" endtime="20170524 21:57:35.562" starttime="20170524 21:57:35.560"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${statusId}</arg>
<arg>code=${statusCode}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_status}</var>
</assign>
<msg timestamp="20170524 21:57:35.564" level="INFO">${dictionary_status} = {u'id': u'2', u'code': u'1', u'name': u'"BUSY"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.564" starttime="20170524 21:57:35.563"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${typeId}</arg>
<arg>name=${typeName}</arg>
</arguments>
<assign>
<var>${dictionary_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.565" level="INFO">${dictionary_id} = {u'id': u'4', u'name': u'"TOP BED TWIN"'}</msg>
<status status="PASS" endtime="20170524 21:57:35.566" starttime="20170524 21:57:35.565"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${dictionary_status}</arg>
<arg>typeBedroomId=${dictionary_id}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170524 21:57:35.567" level="INFO">${dictionary} = {u'id': u'100', u'description': u'IJJRHWDGJJJDVCX', u'floor': u'0', u'number': u'4243', u'priceDaily': u'295', u'bedroomStatusId': {u'code': u'1', u'id': u'2', u'name': u'"BUSY"'}, u'typeBedroomId': {...</msg>
<status status="PASS" endtime="20170524 21:57:35.567" starttime="20170524 21:57:35.566"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170524 21:57:35.568" level="INFO">${client_json} = {"id": "100", "description": "IJJRHWDGJJJDVCX", "floor": "0", "number": "4243", "priceDaily": "295", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.568" starttime="20170524 21:57:35.568"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.569" starttime="20170524 21:57:35.569"></status>
</kw>
<msg timestamp="20170524 21:57:35.570" level="INFO">${request_body} = {"id": "100", "description": "IJJRHWDGJJJDVCX", "floor": "0", "number": "4243", "priceDaily": "295", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name...</msg>
<status status="PASS" endtime="20170524 21:57:35.570" starttime="20170524 21:57:35.542"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.571" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.571" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.572" starttime="20170524 21:57:35.570"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.572" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170524 21:57:35.573" starttime="20170524 21:57:35.572"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.573" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170524 21:57:35.574" starttime="20170524 21:57:35.573"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.574" level="INFO">Request body set to "{"id": "100", "description": "IJJRHWDGJJJDVCX", "floor": "0", "number": "4243", "priceDaily": "295", "bedroomStatusId": {"id": "2", "code": "1", "name": "\"BUSY\""}, "typeBedroomId": {"id": "4", "name": "\"TOP BED TWIN\""}}".</msg>
<status status="PASS" endtime="20170524 21:57:35.575" starttime="20170524 21:57:35.574"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${post_create_new_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.594" starttime="20170524 21:57:35.575"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.596" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:35.596" starttime="20170524 21:57:35.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.598" starttime="20170524 21:57:35.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.599" starttime="20170524 21:57:35.599"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${newBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.601" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.602" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.602" starttime="20170524 21:57:35.601"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.611" starttime="20170524 21:57:35.602"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.613" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.614" starttime="20170524 21:57:35.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.615" starttime="20170524 21:57:35.614"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.617" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.618" starttime="20170524 21:57:35.616"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.620" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.621" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.629" starttime="20170524 21:57:35.620"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.641" starttime="20170524 21:57:35.631"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.643" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.643" starttime="20170524 21:57:35.642"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.648" level="INFO">${response_body} = 19</msg>
<status status="PASS" endtime="20170524 21:57:35.649" starttime="20170524 21:57:35.644"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.651" starttime="20170524 21:57:35.650"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.653" starttime="20170524 21:57:35.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.655" starttime="20170524 21:57:35.653"></status>
</kw>
<msg timestamp="20170524 21:57:35.655" level="INFO">${number_of_bedrooms} = 19</msg>
<status status="PASS" endtime="20170524 21:57:35.656" starttime="20170524 21:57:35.618"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.658" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.658" starttime="20170524 21:57:35.656"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.661" level="INFO">${json_id} = 24</msg>
<status status="PASS" endtime="20170524 21:57:35.661" starttime="20170524 21:57:35.659"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.663" starttime="20170524 21:57:35.662"></status>
</kw>
<msg timestamp="20170524 21:57:35.664" level="INFO">${bedroomId} = 24</msg>
<status status="PASS" endtime="20170524 21:57:35.664" starttime="20170524 21:57:35.601"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.666" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/24</msg>
<status status="PASS" endtime="20170524 21:57:35.666" starttime="20170524 21:57:35.665"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.673" starttime="20170524 21:57:35.667"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.674" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.674" starttime="20170524 21:57:35.673"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.675" level="INFO">${bedroom_body} = {"id":24,"description":"IJJRHWDGJJJDVCX","floor":0,"number":4243,"priceDaily":295,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.675" starttime="20170524 21:57:35.675"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.676" starttime="20170524 21:57:35.676"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.678" starttime="20170524 21:57:35.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.681" starttime="20170524 21:57:35.679"></status>
</kw>
<msg timestamp="20170524 21:57:35.682" level="INFO">${newBedroom} = {"id":24,"description":"IJJRHWDGJJJDVCX","floor":0,"number":4243,"priceDaily":295,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.682" starttime="20170524 21:57:35.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${newBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.684" starttime="20170524 21:57:35.683"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.684" starttime="20170524 21:57:35.541"></status>
</kw>
<kw name="Delete Bedroom" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.686" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.686" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.686" starttime="20170524 21:57:35.685"></status>
</kw>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.688" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.688" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.689" starttime="20170524 21:57:35.688"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.697" starttime="20170524 21:57:35.689"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.698" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.698" starttime="20170524 21:57:35.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.699" starttime="20170524 21:57:35.698"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.700" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.700" starttime="20170524 21:57:35.699"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.702" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.702" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.702" starttime="20170524 21:57:35.701"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.709" starttime="20170524 21:57:35.702"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.710" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.710" starttime="20170524 21:57:35.709"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.711" level="INFO">${response_body} = 19</msg>
<status status="PASS" endtime="20170524 21:57:35.711" starttime="20170524 21:57:35.710"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.712" starttime="20170524 21:57:35.712"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.713" starttime="20170524 21:57:35.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.714" starttime="20170524 21:57:35.714"></status>
</kw>
<msg timestamp="20170524 21:57:35.715" level="INFO">${number_of_bedrooms} = 19</msg>
<status status="PASS" endtime="20170524 21:57:35.715" starttime="20170524 21:57:35.700"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.716" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.716" starttime="20170524 21:57:35.715"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.718" level="INFO">${json_id} = 24</msg>
<status status="PASS" endtime="20170524 21:57:35.718" starttime="20170524 21:57:35.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.719" starttime="20170524 21:57:35.718"></status>
</kw>
<msg timestamp="20170524 21:57:35.719" level="INFO">${bedroomId} = 24</msg>
<status status="PASS" endtime="20170524 21:57:35.720" starttime="20170524 21:57:35.687"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroomId}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.721" starttime="20170524 21:57:35.720"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${delete_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${delete_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.722" level="INFO">${delete_bedroom_endpoint} = /hotel-rest/webresources/bedroom/24</msg>
<status status="PASS" endtime="20170524 21:57:35.722" starttime="20170524 21:57:35.721"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.733" starttime="20170524 21:57:35.722"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.736" level="INFO">${status_code} = 204 No Content</msg>
<status status="PASS" endtime="20170524 21:57:35.736" starttime="20170524 21:57:35.735"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.738" starttime="20170524 21:57:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_No_Content}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.741" starttime="20170524 21:57:35.740"></status>
</kw>
<kw name="Get Last Created Bedroom" library="bedroom_operations">
<assign>
<var>${lastBedroom}</var>
</assign>
<kw name="Get ID of The Last Bedroom" library="bedroom_operations">
<assign>
<var>${bedroomId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.747" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.747" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.748" starttime="20170524 21:57:35.746"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedrooms_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.758" starttime="20170524 21:57:35.748"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.760" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.761" starttime="20170524 21:57:35.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.762" starttime="20170524 21:57:35.761"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170524 21:57:35.764" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170524 21:57:35.764" starttime="20170524 21:57:35.763"></status>
</kw>
<kw name="Get Total Number of Bedrooms" library="bedroom_operations">
<assign>
<var>${number_of_bedrooms}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170524 21:57:35.766" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170524 21:57:35.766" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170524 21:57:35.767" starttime="20170524 21:57:35.765"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedrooms_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.774" starttime="20170524 21:57:35.767"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.775" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.775" starttime="20170524 21:57:35.774"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.776" level="INFO">${response_body} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.777" starttime="20170524 21:57:35.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.778" starttime="20170524 21:57:35.777"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.780" starttime="20170524 21:57:35.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.783" starttime="20170524 21:57:35.781"></status>
</kw>
<msg timestamp="20170524 21:57:35.784" level="INFO">${number_of_bedrooms} = 18</msg>
<status status="PASS" endtime="20170524 21:57:35.784" starttime="20170524 21:57:35.764"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${number_of_bedrooms}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170524 21:57:35.785" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170524 21:57:35.786" starttime="20170524 21:57:35.785"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170524 21:57:35.787" level="INFO">${json_id} = 23</msg>
<status status="PASS" endtime="20170524 21:57:35.787" starttime="20170524 21:57:35.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.788" starttime="20170524 21:57:35.787"></status>
</kw>
<msg timestamp="20170524 21:57:35.789" level="INFO">${bedroomId} = 23</msg>
<status status="PASS" endtime="20170524 21:57:35.789" starttime="20170524 21:57:35.745"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${get_bedroom_endpoint}</arg>
<arg>${bedroomId}</arg>
</arguments>
<assign>
<var>${get_bedroom_endpoint}</var>
</assign>
<msg timestamp="20170524 21:57:35.790" level="INFO">${get_bedroom_endpoint} = /hotel-rest/webresources/bedroom/23</msg>
<status status="PASS" endtime="20170524 21:57:35.791" starttime="20170524 21:57:35.789"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.797" starttime="20170524 21:57:35.791"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20170524 21:57:35.799" level="INFO">${status_code} = 200 OK</msg>
<status status="PASS" endtime="20170524 21:57:35.799" starttime="20170524 21:57:35.798"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_body}</var>
</assign>
<msg timestamp="20170524 21:57:35.800" level="INFO">${bedroom_body} = {"id":23,"description":"EOBRRUAFSUBXWBX","floor":5,"number":9043,"priceDaily":947,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.800" starttime="20170524 21:57:35.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status_code}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.803" starttime="20170524 21:57:35.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${bedroom_body}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.804" starttime="20170524 21:57:35.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${status_code_OK}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.806" starttime="20170524 21:57:35.805"></status>
</kw>
<msg timestamp="20170524 21:57:35.807" level="INFO">${lastBedroom} = {"id":23,"description":"EOBRRUAFSUBXWBX","floor":5,"number":9043,"priceDaily":947,"bedroomStatusId":{"id":2,"code":1,"name":"\"BUSY\""},"typeBedroomId":{"id":4,"name":"\"TOP BED TWIN\""}}</msg>
<status status="PASS" endtime="20170524 21:57:35.807" starttime="20170524 21:57:35.743"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${lastBedroom}</arg>
<arg>${room_description_suite}</arg>
</arguments>
<status status="PASS" endtime="20170524 21:57:35.809" starttime="20170524 21:57:35.808"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.810" starttime="20170524 21:57:35.684"></status>
</kw>
<status status="PASS" endtime="20170524 21:57:35.812" critical="yes" starttime="20170524 21:57:35.539"></status>
</test>
<status status="FAIL" endtime="20170524 21:57:35.813" starttime="20170524 21:57:34.100"></status>
</suite>
<status status="FAIL" endtime="20170524 21:57:35.816" starttime="20170524 21:57:34.098"></status>
</suite>
<status status="FAIL" endtime="20170524 21:57:35.818" starttime="20170524 21:57:34.063"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="10">Critical Tests</stat>
<stat fail="1" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="Project Ci Ivanaz Carinae" pass="10">Project Ci Ivanaz Carinae</stat>
<stat fail="1" id="s1-s1" name="Robotframework-Backend" pass="10">Project Ci Ivanaz Carinae.Robotframework-Backend</stat>
<stat fail="1" id="s1-s1-s1" name="Test Suite" pass="10">Project Ci Ivanaz Carinae.Robotframework-Backend.Test Suite</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170524 21:57:34.211" level="WARN">Imported resource file '/home/ivana/workspace/project_ci_ivanaz_carinae/robotframework-backend/reservation_operations.robot' is empty.</msg>
</errors>
</robot>
